{"version":3,"sources":["actions/userTypes.ts","actions/photoActions.ts","actions/usersActions.ts","App.tsx","styledHelpers/FontSize.ts","components/TopBar/SearchField/SearchField.tsx","styledHelpers/Colors.ts","components/TopBar/Notification/NotificationButtons/NotificationButtons.ts","components/TopBar/Notification/RightIcons.tsx","components/TopBar/DropDownMenu/ToggledMenu/Account/Account.tsx","components/TopBar/DropDownMenu/ToggledMenu/ToggledMenu.tsx","components/TopBar/DropDownMenu/DropDownMenu.tsx","components/TopBar/TopBar.tsx","components/LeftSidebar/LinksUnderProfile/LinksUnderProfile.tsx","components/LeftSidebar/Profile/Profile.tsx","components/LeftSidebar/LeftSidebar.tsx","components/Center/WorkspacesSlider/CardComponent/CardComponent.tsx","data/WorkspacesData.ts","components/Center/WorkspacesSlider/Slider.tsx","components/Center/LatestPublications/LatestPublicationComponent/LatestPublicationComponent.tsx","components/Center/LatestPublications/MainPublication/MainPublication.tsx","components/Center/LatestPublications/LatestPublications.tsx","components/Center/ResumeYourWork/Posts/Posts.tsx","components/Center/ResumeYourWork/BottomContainer.tsx","components/Center/Workspaces/WorkspacesHeader/WorkspacesHeader.tsx","components/Center/Workspaces/WorkspacesCollapse/WorkspacesCollapse.tsx","components/Center/Workspaces/WorkspacesLatestUpdates/WorkspacesLatestUpdatesItem.tsx","components/Center/Workspaces/WorkspacesLatestUpdates/WorkspacesFilterButton.tsx","data/WorkspacesFilterButtons.ts","components/Center/Workspaces/WorkspacesLatestUpdates/DataProvider/WorkspacesDataProvider.ts","components/Center/Workspaces/WorkspacesLatestUpdates/WorkspacesLatestUpdates.tsx","actions/workspacesUpdateTypes.ts","actions/workTypes.ts","actions/publicationTypes.ts","reducers/index.ts","reducers/usersReducers.ts","reducers/worksReducers.ts","reducers/publicationsReducers.ts","reducers/workspacesUpdatesReducers.ts","tools/store.ts","components/Center/Workspaces/Workspaces.tsx","actions/workspacesUpdatesActions.ts","components/Center/Entities/Filter.tsx","components/Center/Entities/Entities.tsx","data/ProfileAdditionalInfoData.ts","components/Center/Profile/ProfileHeader/ProfileHeader.tsx","components/Center/Profile/ProfilePanelInformations/UserDropDown/UserDropdown.tsx","components/Center/Profile/ProfilePanelInformations/AttachmentForm.tsx","components/Center/Profile/ProfilePanelInformations/ProfileInformations.tsx","components/Center/Profile/ProfileProposals/ProfileProposals.tsx","components/Center/Profile/ProfileInternalReviews/ProfileInternalReviews.tsx","components/Center/Profile/ProfileAmountOfFees/ProfileAmountOfFees.tsx","components/Center/Profile/ProfileHeader/ProfileAdditionalInfo.tsx","components/Center/Profile/Profile.tsx","components/Center/Center.tsx","Home/Homepage.tsx","actions/publicationsActions.ts","actions/worksActions.ts","index.tsx"],"names":["GET_USERS","GET_CURRENT_USER","PUSH_DATA","getPhoto","id","fetch","then","response","json","getUsers","dispatch","usersList","a","user","userPhoto","photo","fullUrl","url","thumbnailUrl","type","actionTypes","App","useDispatch","useEffect","FontSize","Wrapper","styled","fieldset","Input","input","SearchIcon","button","SearchField","placeholder","Colors","white","black","lightGray","gray","darkGray","lightBlue","blue","cyan","darkcyan","NotificationButtons","Notification","div","NotificationIcon","NotifyBadge","href","src","alt","Profile","PrivacyAndSettings","Account","currentUser","useSelector","state","users","name","InnerWarpper","MenuItem","ToggledMenu","useState","inputText","setInputText","value","onChange","e","text","target","toLowerCase","includes","MenuToTogge","Icon","Text","Arrow","DropDownMenu","useDropdown","wrapperRef","dropdownOpen","toggleDropdown","ref","onClick","className","Logo","TopBar","RightIcons","Links","LinkIcon","LinksUnderProfile","ProfileWindow","Name","Occupation","ProfileButtons","Button","ColoredLine","color","style","height","width","LeftMenu","BackgroundImage","props","bannerUrl","TypeImage","img","Title","Information","Data","LastUpdated","InformationIcon","CardComponent","window","location","workspaceData","icon","title","lastUpdated","photoUrl","SliderDiv","WorkspaceData","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","map","workspace","PublicationImage","thumbnailSrc","PublicationContent","h3","WhoAndWhen","CreationDate","ProfileImage","Publication","to","publication","textDecoration","creationDate","author","MainPublication","MainPublicationWrapper","Publications","LatestPublications","latestPublications","publications","slice","Container","Posts","posts","loading","post","body","PaginationButtons","BottomContainer","setPosts","setLoading","currentPage","setCurrentPage","postsPerPage","axios","get","res","data","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","maxPage","length","changePage","pageNumber","String","padStart","InnerWrapper","Header","Main","ContentWrapper","WorkspacesHeader","Content","Cell","CellIcon","CellTitle","CellBody","WorkspacesCollapse","hidden","setHidden","Company","Updated","WorkspacesLatestUpdatesItem","update","WorkspacesFilterButton","event","iconName","getIcon","icons","WorkspacesFilterButtons","WorkspacesDataProvider","works","dataSet","this","titleFilter","typeFilter","result","filter","entry","Filters","FilterButtons","TitleFilter","WorkspacesLatestUpdates","workspacesUpdates","workspacesUpdatesDataProvider","setTitleFilter","getFiltered","workspacesUpdatesData","setWorkspacesUpdatesData","wudp","handleButtonFilterClick","typeName","onInput","GET_WORKSPACES_UPDATES","GET_YOUR_WORKS","GET_LATEST_PUBLICATIONS","combineReducers","someData","action","store","createStore","reducers","applyMiddleware","thunk","Workspaces","workspacesUpdate","userId","Math","floor","random","getState","followed","_","sample","Row","Filter","options","option","data-id","optionId","newOptions","setOptions","removeOption","newOption","field","operator","displayType","Card","Entities","companyName","street","city","country","sort","setSort","initialized","setInitialized","setDisplayType","filtersChanged","setFiltersChanged","filtersOpen","toggleFilters","entities","setEntities","genericEntities","setGenericEntities","ent","i","entity","address","push","compare","b","fillEntities","applyFilters","collection","reverse","navigator","clipboard","writeText","ev","EditMode","sections","cells","TopButtons","UserInnerWrapper","ProfilePictureWrapper","ProfilePicture","ProfileHeader","prop","makeUserCopy","console","log","company","email","phone","status","setUser","userCopy","setUserCopy","handleInput","newUserData","editMode","setEditMode","emitCustomEvent","Select","select","UserDropdown","selectedUser","setSelectedUser","userSelection","onAdd","AttachmentForm","attachmentName","setAttachmentName","inputRef","useRef","files","current","Section","section","SectionTitle","SectionBody","Attachment","AttachmentBody","Correspondent","CorrespondentBody","CorrespondentImage","CorrespondentFullName","HourlyFeeInput","ProfileInformations","hourlyFee","attachments","correspondents","setData","dataCopy","setDataCopy","useCustomEventListener","attachment","correspondent","Table","table","ProfileProposals","expertise","date","firm","emptyRecord","proposals","setProposals","proposalsCopy","setProposalsCopy","proposalRecord","setProposalRecord","inputHandler","proposal","colSpan","ProfileInternalReviews","emptyProposal","setReview","setReviewCopy","setReviewRecord","ProfileAmountOfFees","year","cost_center","total_amount","law_firm","setFee","setFeeCopy","setFeeRecord","InnerWrapperTitle","InnerWrapperBody","AddButton","ProfileAdditionalInfo","defaultSections","sectionsCopy","setSectionsCopy","setSections","addMode","setAddMode","cell","sectionName","cellName","document","querySelector","newCell","addHandler","Profilepage","Center","exact","path","Slider","MainPage","takeRight","work","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bbad0ab6.chunk.js","sourcesContent":["import { ISingleUser } from '../entities/users';\r\n\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\r\nexport const PUSH_DATA = 'PUSH_DATA';\r\n\r\nexport interface IUserTypes { \r\n    GET_USERS: {\r\n        usersList: ISingleUser[];\r\n    };\r\n\r\n    GET_CURRENT_USER: {\r\n        user: ISingleUser;\r\n    };\r\n\r\n    PUSH_DATA: {\r\n        someData: string;\r\n    };\r\n}   ","import {IPhoto} from \"../entities/photo\";\n\nexport const getPhoto = (id: number): Promise<IPhoto> => {\n    return fetch(`https://jsonplaceholder.typicode.com/photos/${id}`)\n        .then(response => response.json() as Promise<IPhoto>)\n}\n","import { Dispatch } from 'redux';\r\nimport * as actionTypes from '../actions/userTypes';\r\nimport { ISingleUser } from '../entities/users';\r\nimport { getPhoto } from \"./photoActions\";\r\n\r\nexport const getUser = (id: number): Promise<ISingleUser> => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then(response => response.json() as Promise<ISingleUser>);\r\n};\r\n\r\nexport const getUsers = (): Promise<ISingleUser[]> => ((dispatch: Dispatch) => {\r\n    return fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(async (usersList: ISingleUser[]) => {\r\n            for (const user of usersList) {\r\n                const userPhoto = await getPhoto(user.id);\r\n                user.photo = {\r\n                    fullUrl: userPhoto.url,\r\n                    thumbnailUrl: userPhoto.thumbnailUrl\r\n                }};\r\n            \r\n            dispatch({\r\n                type: actionTypes.GET_USERS,\r\n                usersList\r\n            })\r\n        })\r\n}) as any;\r\n\r\nexport const getCurrentUser = (): Promise<ISingleUser> => ((dispatch: Dispatch) => {\r\n    return fetch('https://jsonplaceholder.typicode.com/users/9')\r\n        .then(response => response.json())\r\n        .then(async (user: ISingleUser) => {\r\n            const userPhoto = await getPhoto(user.id);\r\n            user.photo = {\r\n                fullUrl: userPhoto.url,\r\n                thumbnailUrl: userPhoto.thumbnailUrl\r\n            };\r\n            dispatch({\r\n                type: actionTypes.GET_CURRENT_USER,\r\n                user\r\n            })\r\n        });\r\n}) as any;\r\n\r\n\r\nexport const getSomeData = (someData: string): Promise<ISingleUser[]> => ((dispatch: Dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.PUSH_DATA,\r\n        someData\r\n    })\r\n}) as any;\r\n\r\n","import React, {FC, useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router } from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getCurrentUser, getUsers} from \"./actions/usersActions\";\r\n\r\nconst App: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    type GetCurrentUser = ReturnType<typeof getCurrentUser>;\r\n    type GetUsers = ReturnType<typeof getUsers>;\r\n\r\n    useEffect(() => {\r\n        dispatch<GetCurrentUser>(getCurrentUser());\r\n        dispatch<GetUsers>(getUsers());\r\n    });\r\n\r\n    return(null);\r\n}\r\nexport default App;\r\n","export const FontSize = {\r\n    8: '0.5rem',\r\n    10: '0.6rem',\r\n    12: '0.74rem',\r\n    14: '0.85rem',\r\n    16: '1rem',\r\n    18: '1.13rem',\r\n    20: '1.25rem',\r\n    22: '1.4rem',\r\n    24: '1.55rem'\r\n};\r\n","import {FC} from 'react';\r\nimport styled from 'styled-components';\r\nimport {FontSize} from \"../../../styledHelpers/FontSize\";\r\n\r\nconst Wrapper = styled.fieldset`\r\n  position: relative;\r\n  width: 40%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 2px solid lightgrey;\r\n  text-align: center;\r\n  font-family:Tahoma;\r\n  font-size: ${FontSize[18]};\r\n`;\r\n\r\nconst SearchIcon = styled.button`\r\n  background: url('./icons/search.svg') no-repeat;\r\n  display: block;\r\n  margin: auto auto;\r\n  top:0;\r\n  bottom:0;\r\n  width: 25px;\r\n  right: 10px;\r\n  height: 25px;\r\n  border: none;\r\n  position: absolute;\r\n  background-size: cover;\r\n  outline: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }  \r\n`;\r\n\r\nconst SearchField: FC = () => {\r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                <Input placeholder='Search Legalcluster...' />\r\n                <SearchIcon />\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchField;\r\n","export const Colors = {\r\n    white: '#FFFFFF',\r\n    black: '#000',\r\n    lightGray: '#dfdede',\r\n    gray: '#afb1b6',\r\n    darkGray: '#232C47',\r\n    lightBlue: '#7cbcf7',\r\n    blue: '#5163af',\r\n    cyan: '#b8f9ff',\r\n    darkcyan: '#36838a',\r\n}","import styled from \"styled-components\";\r\nimport {Colors} from \"../../../../styledHelpers/Colors\";\r\n\r\nconst NotificationButtons = styled.a`\r\n  img {\r\n    max-width: 25px;\r\n    height: 25xp;\r\n    margin-right: 0;\r\n  }\r\n  background-color:${Colors.white};\r\n        :hover {\r\n          background-color:${Colors.lightGray};\r\n  }  \r\n  position: relative;\r\n  display:flex;\r\n  border-radius: 50%;\r\n  width: 45px;\r\n  height: 45px;\r\n  margin-right: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default NotificationButtons;","import styled from \"styled-components\";\r\nimport {Colors} from \"../../../styledHelpers/Colors\";\r\nimport {FontSize} from \"../../../styledHelpers/FontSize\";\r\nimport NotificationButtons from \"./NotificationButtons/NotificationButtons\";\r\n\r\nfunction Notification() {\r\n\r\n  const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 14px;  \r\n    width: 28%;\r\n    display: flex;\r\n    justify-content:flex-end;\r\n  `;\r\n\r\n  const NotificationIcon = styled(NotificationButtons)`\r\n    margin-right: 10px;\r\n  `;\r\n\r\n  const NotifyBadge = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    top: 0;\r\n    right: 0;\r\n    border-radius: 50%;\r\n    background-color: ${Colors.lightBlue};\r\n    color: ${Colors.white};\r\n    font-size: ${FontSize[16]};\r\n    position: absolute;\r\n    line-height: normal;\r\n    text-align: center;\r\n    font-family:Tahoma;\r\n  `;\r\n\r\n  return (\r\n      <Wrapper>\r\n          <NotificationButtons href=\"/\">\r\n              <img src=\"./icons/house.png\" alt=\"Home page\"/>\r\n          </NotificationButtons>\r\n\r\n          <NotificationIcon href=\"/comments\">\r\n              <img src=\"./icons/comments.png\" alt=\"Comments\"/>\r\n              <NotifyBadge>6</NotifyBadge>\r\n          </NotificationIcon>\r\n\r\n          <NotificationIcon href=\"/notifications\">\r\n              <img src=\"./icons/bell.png\" alt=\"Notifications\"/>\r\n              <NotifyBadge>2</NotifyBadge>\r\n          </NotificationIcon>\r\n      </Wrapper>\r\n  );\r\n}\r\nexport default Notification;","import {FC, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../../../../styledHelpers/Colors\";\r\nimport { FontSize } from \"../../../../../styledHelpers/FontSize\";\r\n\r\nimport { IState } from '../../../../../reducers';\r\nimport { IUsersReducer } from '../../../../../reducers/usersReducers';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n    height:152px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: Tahoma;\r\n    #Account{\r\n        margin-left:10px;\r\n        margin-top:8px;\r\n        font-size: ${FontSize[16]};\r\n    }\r\n`;\r\nconst Profile = styled.div` \r\n    margin-left: 10px;\r\n    margin-top: 5px;\r\n    margin-right: 15px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    img{\r\n        margin-top: 5px;\r\n        height:40px;\r\n        width:auto;\r\n        margin-right: 10px;\r\n        border-radius:50px;\r\n    }\r\n    p{\r\n        font-size: ${FontSize[18]};\r\n        margin-bottom:5px;\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        font-weight: bold;\r\n    }\r\n    #NameAndLink{\r\n        margin-left:8px;\r\n    }\r\n    div{\r\n        display:flex;\r\n        flex-direction:column;\r\n    }\r\n`;\r\n\r\nconst PrivacyAndSettings = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:100%;\r\n    height:150px;\r\n    #Privacy,#Settings{\r\n        display:flex;\r\n        align-items:center;\r\n        margin-top: 10px;\r\n        margin-left: 15px;\r\n        img{\r\n            height:25px;\r\n            margin-right:20px;\r\n        }\r\n        a{\r\n            text-decoration:none;\r\n            color: ${Colors.black};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Account: FC = () => {\r\n    const { currentUser } = useSelector<IState, IUsersReducer>(state => ({\r\n        ...state.users\r\n    }));\r\n\r\n\treturn (\r\n        \r\n        <Wrapper>\r\n            <p id=\"Account\">Account</p>\r\n            <Profile>\r\n                <img src={currentUser?.photo.thumbnailUrl} alt='Profile picture' />\r\n                <div id=\"NameAndLink\">\r\n                    <p>{currentUser?.name}</p>\r\n                    <a href=\"/profile\">See profile</a>\r\n                </div>\r\n            </Profile>\r\n\r\n            <PrivacyAndSettings>\r\n                <div id=\"Privacy\">\r\n                    <img src=\"./icons/privacy.png\"></img>\r\n                    <a href=\"privacy\">Privacy</a>\r\n                </div>\r\n                <div id=\"Settings\">\r\n                    <img src=\"./icons/settings.png\"></img>\r\n                    <a href=\"settings\">Settings</a>\r\n                </div>\r\n            </PrivacyAndSettings>\r\n\r\n        </Wrapper>\r\n\t)\r\n}\r\n\r\nexport default Account;","import { ChangeEvent, ChangeEventHandler, FC, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../../../styledHelpers/Colors\";\r\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\r\nimport Account from \"./Account/Account\"\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    width:310px;\r\n    height:480px;\r\n    border:1px solid gray;\r\n    background-color: ${Colors.white};\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: Tahoma;\r\n\r\n    #filterInput{\r\n        width:100%;\r\n        height:50px;\r\n        display:flex;\r\n        justify-content:center;\r\n        align-items:center;\r\n        input{\r\n        border-radius:5px;\r\n        height: 35px;\r\n        width: 80%;\r\n        font-size: ${FontSize[18]};\r\n        outline:none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst InnerWarpper = styled.div`\r\n    width:100%;\r\n    height:280px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: Tahoma;\r\n    overflow-y:scroll;\r\n    margin-left:8px;\r\n    a{\r\n        text-decoration:none;\r\n        color: ${Colors.black};\r\n    }\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n    width:90%;\r\n    height: 40px;\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n    display:flex;\r\n    justify-content:start;\r\n    align-items:center;\r\n    font-size: ${FontSize[18]};\r\n    img{\r\n        height: 25px;\r\n        width:25px;\r\n        margin-right: 20px;\r\n    }\r\n    p{\r\n        margin: 2px 2px;\r\n        font-size: ${FontSize[16]}\r\n    }\r\n`;\r\n\r\nconst ToggledMenu: FC = () => {\r\n\r\n    const [inputText, setInputText] = useState<string>('');\r\n    \r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const text = e.target.value;\r\n        setInputText(text);\r\n    }\r\n\r\n\treturn (\r\n        <Wrapper>\r\n            <div id=\"filterInput\">\r\n                <input type=\"text\" value={inputText} onChange={inputHandler} placeholder=\"Filter...\" />\r\n            </div>\r\n            <InnerWarpper>\r\n                <MenuItem><p>Platform</p></MenuItem>\r\n                {\r\n                    'Home'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem ><img src='./icons/house2.png'/><a href=\"/\">Home</a></MenuItem>\r\n                }\r\n                {\r\n                    'Publication'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem>  <img src='./icons/publications.png'/> <a href=\"publication\">Publication</a></MenuItem>\r\n                }\r\n                {\r\n                    'People'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/people.png'/> <a href=\"people\">People</a> </MenuItem>\r\n                }\r\n                {\r\n                    'Entities'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/entities2.png'/> <a href=\"entities\">Entities</a></MenuItem>\r\n                }\r\n                {\r\n                    'Administration'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/administration.png'/> <a href=\"administration\">Administration</a></MenuItem>\r\n                }\r\n                <MenuItem><p>Workspaces</p></MenuItem>\r\n                {\r\n                    'Client contract'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/entities2.png'/> <a href=\"client_contract\">Client contract</a></MenuItem>\r\n                }\r\n                {\r\n                    'Supplier contract'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/entities2.png'/> <a href=\"supplier_contract\">Supplier contract</a></MenuItem>\r\n                }\r\n                {\r\n                    'Corporate'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/entities.png'/> <a href=\"corporate\">Corporate</a></MenuItem>\r\n                }\r\n                {\r\n                    'Group norms'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/people.png'/> <a href=\"group_norms\">Group norms</a> </MenuItem>\r\n                }\r\n                {\r\n                    'Real estate contracts'.toLowerCase().includes(inputText.toLowerCase()) && <MenuItem> <img src='./icons/entities.png'/> <a href=\"real_estate_contracts\">Real estate contracts</a></MenuItem>\r\n                }\r\n            </InnerWarpper>\r\n            <Account/>\r\n        </Wrapper>\r\n\t)\r\n}\r\nexport default ToggledMenu;","import { FC } from \"react\";\r\nimport useDropdown from 'react-dropdown-hook';\r\nimport styled from \"styled-components\";\r\nimport {FontSize} from \"../../../styledHelpers/FontSize\";\r\nimport ToggledMenu from \"./ToggledMenu/ToggledMenu\";\r\n\r\nconst Wrapper = styled.div`\r\n    width:15%;\r\n    margin-right:8%;\r\n    height:50px;\r\n    margin-top:0.4%;\r\n    z-index: 2;\r\n`;\r\n\r\nconst MenuToTogge = styled.div`\r\n    width:320px;\r\n    height:50px;\r\n    display: flex;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    width:15%;\r\n    height:100%;\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Text = styled.div`\r\n    width:70%;\r\n    height: 100%;\r\n    font-size: ${FontSize[24]};\r\n    align-items: center;\r\n    padding-left:5%;\r\n    display:flex;\r\n    font-family: Tahoma;\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n    width:15%;\r\n    height:100%;\r\n    img {\r\n        width: 50%;\r\n        height: 100%;\r\n        left:0;\r\n        :hover {\r\n            cursor: pointer;\r\n        }  \r\n    }\r\n`;\r\n\r\n const DropDownMenu: FC = () => {\r\n\tconst [wrapperRef, dropdownOpen, toggleDropdown] = useDropdown();\r\n\treturn (\r\n        <Wrapper ref={wrapperRef}  >\r\n            <MenuToTogge onClick={toggleDropdown} className='zxcz'>\r\n                <Icon>               \r\n                     <img src='./icons/house2.svg' alt=\"Home page\" />\r\n                </Icon>\r\n                <Text>\r\n                    Home\r\n                </Text>\r\n                <Arrow>\r\n                    <img src='./icons/arrow-down.svg' alt=\"Drop down menu arrow\"></img>\r\n                </Arrow>\r\n            </MenuToTogge>\r\n            {dropdownOpen &&\r\n                <>\r\n                    <ToggledMenu/>\r\n                </> \r\n            }\r\n        </Wrapper>\r\n\t)\r\n}\r\nexport default DropDownMenu;\r\n","import { FC } from 'React';\r\nimport styled from 'styled-components';\r\nimport SearchField from './SearchField/SearchField';\r\nimport {Colors} from \"../../styledHelpers/Colors\";\r\nimport RightIcons from \"./Notification/RightIcons\";\r\nimport DropDownMenu from \"./DropDownMenu/DropDownMenu\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  background:${Colors.white};\r\n  height: 70px;\r\n  box-shadow: 1px 1px 12px ${Colors.black};\r\n  display: flex;\r\n  align-items: flex-start;\r\n  z-index: 3;\r\n`;\r\nconst Logo = styled.div`\r\n  margin-left:2%;\r\n  display: flex;\r\n  height: 50px;\r\n  width: 5%;\r\n  margin-top:0.3%;\r\n`;\r\n\r\nconst TopBar: FC = () => {\r\n    return( \r\n        <Wrapper>\r\n            <Logo>\r\n                <img src='./logo.png' alt='Logo'/>\r\n            </Logo>\r\n            <DropDownMenu />\r\n            <SearchField />\r\n            <RightIcons />\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default TopBar;\r\n ","import { FC } from 'React';\r\nimport styled from 'styled-components';\r\nimport {FontSize} from \"../../../styledHelpers/FontSize\";\r\nimport {Colors} from \"../../../styledHelpers/Colors\";\r\n\r\nconst Links = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst LinkIcon = styled.div`\r\n    margin-top:10px;\r\n    display:flex;\r\n    align-items:center;\r\n    text-decoration:none;\r\n    width:25%;\r\n    display:flex;\r\n    img{\r\n        width:40px;\r\n        height:40px;\r\n        margin-left:10px;\r\n    }\r\n    button{\r\n    }\r\n    span{\r\n        margin-top: 12px;\r\n        margin-left:20px;\r\n        font-size: ${FontSize[24]};\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:${Colors.black};\r\n    }\r\n`;\r\n\r\nconst LinksUnderProfile: FC = () => {\r\n    return( \r\n        <Links>\r\n            <LinkIcon>\r\n                    <img src='./icons/publications.svg' alt='Publications'></img>\r\n                    <a href=\"/publications\"><span>Publications</span></a>\r\n            </LinkIcon>\r\n\r\n            <LinkIcon>\r\n                    <img src='./icons/ecosystem.svg' alt='Ecosystem'></img>\r\n                    <a href=\"/ecosystem\"><span>Ecosystem</span></a>\r\n            </LinkIcon>\r\n\r\n            <LinkIcon>\r\n                    <img src='./icons/entities.svg' alt='Entities'></img>\r\n                    <a href=\"/entities\"><span>Entities</span></a>\r\n            </LinkIcon>\r\n        </Links>\r\n        \r\n    );\r\n};\r\nexport default LinksUnderProfile;\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Colors} from \"../../../styledHelpers/Colors\";\r\nimport {FontSize} from \"../../../styledHelpers/FontSize\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {IUsersReducer} from \"../../../reducers/usersReducers\";\r\nimport {IState} from \"../../../reducers\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    width: 304px;\r\n    height: 330px;\r\n    background:#f0f0f0;\r\n    display: flex;\r\n    border-radius:2%;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileWindow = styled.div`\r\n    width:300px;\r\n    height:220px;\r\n    border-radius:2%;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    img{\r\n        width:100px;\r\n        height:100px;\r\n        border-radius:50%;\r\n    }\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Name = styled.div`\r\n    margin-top:10px;\r\n    display:flex;\r\n    color: ${Colors.lightBlue};\r\n    font-size: ${FontSize[24]};\r\n    font-weight:bold;\r\n    font-family: Tahoma;\r\n`;\r\nconst Occupation = styled.div`\r\n    display:flex;\r\n    color: ${Colors.gray};\r\n    font-size: ${FontSize[18]};\r\n    font-family: Tahoma;\r\n    margin-top:20px;\r\n`;\r\nconst ProfileButtons = styled.div`\r\n    margin-top:3%;\r\n    font-family: Tahoma;\r\n    font-size:${FontSize[20]};\r\n    display:flex;\r\n    width:100%;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n img{\r\n        width:30px;\r\n        height:30px;\r\n        margin-left:10px;\r\n    }\r\n    width:25%;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    width:55%;\r\n    height:30px;\r\n    align-items:center;\r\n    display:flex;\r\n\r\n`;\r\nconst Button=styled.button`\r\n    top:0;\r\n    width:15%;\r\n    height:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    border-radius:15%;\r\n    outline:none;\r\n    img{\r\n        width:20px;\r\n        height:20px;\r\n    }\r\n    :hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ColoredLine = ({color} : {color: string}) => (\r\n    <hr\r\n        style={{\r\n            height: 1,\r\n            width: '99.4%'\r\n        }}\r\n    />\r\n);\r\n\r\nconst Profile: FC = () => {\r\n\r\n    const { currentUser } = useSelector<IState, IUsersReducer>(state => ({\r\n        ...state.users\r\n    }));\r\n\r\n    return( \r\n            <Wrapper>      \r\n                <ProfileWindow>\r\n                    <img src={currentUser?.photo.thumbnailUrl} alt='Profile picture' />\r\n                    <Name>\r\n                        <p>{currentUser?.name}</p>\r\n                    </Name>\r\n                    <Occupation>\r\n                        <p>Job title - Company</p>\r\n                    </Occupation>\r\n                </ProfileWindow>        \r\n                \r\n                <ColoredLine color=\"black\" />\r\n\r\n                <ProfileButtons> \r\n                    <Icon><img src=\"./icons/network.png\" alt='network icon'></img></Icon>\r\n                    <Text>Your Network</Text>\r\n                    <Button><img src=\"./icons/network.svg\" alt='network'></img></Button>\r\n                </ProfileButtons>\r\n\r\n                <ProfileButtons>\r\n                        <Icon><img src=\"./icons/publications.svg\" alt='publications icon'></img></Icon>\r\n                        <Text>Your Publications</Text>\r\n                        <Button><img src=\"./icons/plus.svg\" alt='plus'></img></Button>\r\n                </ProfileButtons>\r\n\r\n           </Wrapper> \r\n    );\r\n};\r\nexport default Profile;","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport LinksUnderProfile from './LinksUnderProfile/LinksUnderProfile';\r\nimport Profile from \"./Profile/Profile\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 304px;\r\n  height: 500px;\r\n  display: flex;\r\n  margin-left:3%;\r\n  margin-top:20px;\r\n  border-radius:2%;\r\n  flex-direction: column;\r\n  z-index: 1;\r\n`;\r\n\r\nconst LeftMenu: FC = () => {\r\n    return( \r\n        <Wrapper>  \r\n            <Profile/>\r\n            <LinksUnderProfile/>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default LeftMenu;\r\n","import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {IWorkspace} from \"../../../../interfaces/IWorkspace\";\nimport {Colors} from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from '../../../../styledHelpers/FontSize';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst Wrapper = styled.div`\n  width: 340px;\n  height:200px; \n  flex-direction: column;\n  background-color: ${Colors.white};\n  position: relative;\n  font-family: Tahoma;\n`;\n\nconst BackgroundImage = styled.div`\n  width: 100%;\n  height: 80px;\n  position:absolute;\n  width: 100%;\n  height: 80px;\n  background: url(${(props: {bannerUrl: string}) => props.bannerUrl}) no-repeat;\n  background-size: cover;\n`;\n\n\nconst TypeImage = styled.img`\n  width:90px;\n  height:90px;\n  position:absolute;\n  border: 1px solid ${Colors.gray};\n  margin-left: 15px;\n  margin-top: 50px;\n  border-radius: 10px;\n  background-color: ${Colors.white};\n`;\n\nconst Title = styled.div`\n  position:absolute;\n  margin-top:90px;\n  margin-left: 120px;\n  font-size: ${FontSize[24]};\n`;\n\nconst Information = styled.div`\n  display: flex;\n  position:absolute;\n  flex-direction: column;\n  margin-top: 150px;\n  margin-left:14px;\n`;\n\nconst Data = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: ${FontSize[16]};\n`;\n\nconst LastUpdated = styled.div`\n  margin-left:5px;\n`;\n\nconst InformationIcon = styled.img`\n  width: 30px;\n  height:30px;\n`;\n\ninterface ICardComponent {\n  className?: string;\n  workspaceData: IWorkspace;\n}\n\nconst CardComponent: FC<ICardComponent> = (props) => {\n    const handleCardClick = () => {\n        window.location.href = `/workspace`;\n    }\n\n    return (\n        <Wrapper onClick={handleCardClick}>\n          <BackgroundImage bannerUrl={props.workspaceData.bannerUrl}/>\n          <TypeImage src={`./icons/${props.workspaceData.icon}.jpg`} />\n          <Title>{props.workspaceData.title}</Title>\n          <Information>\n              <Data>\n                  <InformationIcon src={`./icons/${props.workspaceData.icon}.jpg`} />\n                  {props.workspaceData.type} • \n                  <img src='./icons/people.png'/>\n                  {props.workspaceData.users} users\n              </Data>\n              <LastUpdated>\n                  Last update {props.workspaceData.lastUpdated}\n              </LastUpdated>\n          </Information>\n      </Wrapper>\n    );\n}\nexport default CardComponent;\n","import {IWorkspace} from \"../interfaces/IWorkspace\";\n\nconst Data: IWorkspace[] = [\n    {\n        id: 1,\n        bannerUrl: './images/sign2.jpg',\n        photoUrl: './publications/1/image.jpg',\n        icon: 'contract',\n        title: 'Client contract',\n        type: 'Contract',\n        users: 150,\n        lastUpdated: 'today'\n    },\n    {\n        id: 2,\n        bannerUrl: './images/sign3.jpg',\n        photoUrl: './publications/1/image.jpg',\n        icon: 'contract',\n        title: 'Client contract',\n        type: 'Contract',\n        users: 150,\n        lastUpdated: '4 days ago'\n    },\n    {\n        id: 3,\n        bannerUrl: './images/sign2.jpg',\n        photoUrl: './publications/1/image.jpg',\n        icon: 'contract',\n        title: 'Client contract',\n        type: 'Contract',\n        users: 150,\n        lastUpdated: '7 days ago'\n    },\n    {\n        id: 4,\n        bannerUrl: './images/sign4.jpg',\n        photoUrl: './publications/1/image.jpg',\n        icon: 'contract',\n        title: 'Supplier contract',\n        type: 'Supplier contract',\n        users: 150,\n        lastUpdated: '3 days ago'\n    },\n    {\n        id: 5,\n        bannerUrl: './images/sign3.jpg',\n        photoUrl: './publications/1/image.jpg',\n        icon: 'contract',\n        title: 'Client contract',\n        type: 'Contract',\n        users: 150,\n        lastUpdated: '1 days ago'\n    },\n    {\n        id: 6,\n        bannerUrl: './images/sign4.jpg',\n        photoUrl: './publications/1/image.jpg',\n        icon: 'contract',\n        title: 'Supplier contract',\n        type: 'Supplier contract',\n        users: 150,\n        lastUpdated: '3 days ago'\n    },\n    \n];\n\nexport default Data;\n","import {FC} from 'react';\r\nimport styled from 'styled-components';\r\nimport Slider from \"react-slick\";\r\nimport CardComponent from './CardComponent/CardComponent';\r\nimport WorkspaceData from \"../../../data/WorkspacesData\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height:200px;\r\n    margin-top: 20px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-bottom:20px;\r\n`;\r\n\r\nconst SliderDiv: FC = () => {\r\n    const workspaceData = WorkspaceData;\r\n\r\n    const settings = {\r\n      dots: false,\r\n      arrows: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <Slider {...settings}>\r\n                {workspaceData.map((workspace) => {\r\n                    return (\r\n                        <CardComponent workspaceData={workspace}  key={workspace.id} />\r\n                    );\r\n                })}\r\n            </Slider>\r\n        </Wrapper>\r\n    );\r\n}\r\nexport default SliderDiv;","import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {IPublication} from \"../../../../entities/publication\";\nimport {FontSize} from '../../../../styledHelpers/FontSize';\nimport {Colors} from '../../../../styledHelpers/Colors'\n\nconst Wrapper = styled.div`\n  display:flex;\n  height:90px;\n  margin-bottom: 1px;\n`;\n\nconst PublicationImage = styled.div`\n  height: 100%;\n  width: 90px;\n  background: url(\"${(props: {thumbnailSrc: string}) => props.thumbnailSrc}\");\n  background-size: cover;\n`;\n\nconst PublicationContent = styled.div`\n`;\n\nconst Title = styled.h3`\n  font-size: ${FontSize[20]};\n  padding-bottom: 35px;\n  color:white;\n  text-decoration: none;\n\n`;\n\nconst WhoAndWhen = styled.div`\n  display: flex;\n  font-size: ${FontSize[16]};\n  align-items: center;\n  height: fit-content;\n`;\n\nconst CreationDate = styled.div`\n  color: ${Colors.black};\n`;\n\nconst Profile = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n`;\n\nconst ProfileImage = styled.img`\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\ninterface PublicationProps {\n    className?: string;\n    publication: IPublication\n}\n\nconst Publication: FC<PublicationProps> = (props) => {\n\n  return (\n      <Wrapper>\n          <div>\n              <Link to=\"#\">\n                  <PublicationImage thumbnailSrc={props.publication?.thumbnailUrl} />\n              </Link>\n          </div>\n          <PublicationContent>\n              <Title>\n                  <Link to='#' style={{ color: 'black', textDecoration: 'none'}}>\n                      {props.publication?.title}\n                  </Link>\n              </Title>\n              <WhoAndWhen>\n                  <CreationDate>\n                      {props.publication?.creationDate}\n                  </CreationDate>\n                  <Profile>\n                      <ProfileImage src={props.publication?.author.photo.thumbnailUrl} />\n                      {props.publication?.author.name}\n                  </Profile>\n              </WhoAndWhen>\n          </PublicationContent>\n      </Wrapper>\n  );\n}\n\nexport default Publication;\n","import {FC} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {IPublication} from \"../../../../entities/publication\";\r\nimport {FontSize} from '../../../../styledHelpers/FontSize';\r\nimport {Colors} from '../../../../styledHelpers/Colors'\r\n\r\nconst Wrapper = styled.div`\r\n  display:flex;\r\n  position: relative;\r\n  height: 100%;\r\n  color: ${Colors.white}\r\n`;\r\n\r\nconst PublicationImage = styled.div`\r\n  height: 100%;\r\n  width:300px;\r\n  position: absolute;\r\n  border-top-left-radius: 30px;\r\n  border-bottom-left-radius: 30px;\r\n  background: url(\"${(props: {thumbnailSrc: string}) => props.thumbnailSrc}\");\r\n  background-size: cover;\r\n  z-index: 0;\r\n`;\r\n\r\nconst PublicationContent = styled.div`\r\n  display: flex;\r\n  z-index: 1;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  padding-bottom:30px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: ${FontSize[16]};\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst WhoAndWhen = styled.div`\r\n  display: flex;\r\n  font-size: ${FontSize[18]};\r\n  height: fit-content;\r\n`;\r\n\r\nconst CreationDate = styled.div`\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  height:20px;\r\n  border-radius: 50%;\r\n  margin-right: 5px;\r\n`;\r\n\r\ninterface PublicationProps {\r\n    className?: string;\r\n    publication: IPublication\r\n}\r\n\r\nconst MainPublication: FC<PublicationProps> = (props) => {\r\n  return (\r\n    <Wrapper className={props.className}>\r\n      <div>\r\n          <Link to=\"#\">\r\n              <PublicationImage thumbnailSrc={props.publication?.thumbnailUrl} />\r\n          </Link>\r\n      </div>\r\n      <PublicationContent>\r\n          <Title >\r\n            <Link to=\"#\" style={{color: 'white', textDecoration: 'none'}}>\r\n              {props.publication?.title}\r\n            </Link>\r\n          </Title>\r\n\r\n          <WhoAndWhen>\r\n\r\n            <CreationDate>\r\n                {props.publication?.creationDate}\r\n            </CreationDate>\r\n            \r\n            <Profile>\r\n                <ProfileImage src={props.publication?.author.photo.thumbnailUrl} />\r\n                {props.publication?.author.name}\r\n            </Profile>\r\n\r\n          </WhoAndWhen>\r\n      </PublicationContent>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default MainPublication;\r\n","import {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PublicationComponent from \"./LatestPublicationComponent/LatestPublicationComponent\";\nimport MainPublication from \"./MainPublication/MainPublication\";\nimport {FontSize} from '../../../styledHelpers/FontSize';\nimport {Colors} from '../../../styledHelpers/Colors'\nimport {useSelector} from \"react-redux\";\nimport {IState} from \"../../../reducers\";\nimport {IPublicationsReducer} from \"../../../reducers/publicationsReducers\";\n\nconst Wrapper = styled.div`\n  display:flex;\n  background: ${Colors.white};\n  width: 100%;\n  height: 320px;\n  font-family: Tahoma;\n  border-top-left-radius: 30px;\n  border-bottom-left-radius: 30px;\n  margin-bottom: 20px;\n`;\n\nconst MainPublicationWrapper = styled.div`\n  height: 320px;\n`;\n\nconst Publications = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  h2{\n      font-size: ${FontSize[20]};\n  }\n`;\n\nconst LatestPublications: FC = () => {\n    const { latestPublications } = useSelector<IState, IPublicationsReducer>(state => ({\n        ...state.publications\n    }));\n\n    return (\n        <Wrapper id='latest-publications-wrapper'>\n            <MainPublicationWrapper>\n                <MainPublication publication={latestPublications[0]}/>\n            </MainPublicationWrapper>\n            <Publications>\n                <h2>Latest publications</h2>\n                <div>\n                    {latestPublications.slice(1, 4).map((publication) => {\n                        return (\n                            <PublicationComponent publication={publication}/>\n                        );\n                    })}\n                </div>\n                <Link to=\"/publications\" id=\"link\" style={{ color: 'black', textDecoration: 'none'}}>See more publications</Link>\n            </Publications>\n        </Wrapper>\n    );\n}\n\nexport default LatestPublications;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Colors} from \"../../../../styledHelpers/Colors\";\r\nimport { FontSize } from '../../../../styledHelpers/FontSize';\r\nimport {IState} from \"../../../../reducers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IUsersReducer } from '../../../../reducers/usersReducers';\r\n\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    height:130px;\r\n    background-color: ${Colors.white};\r\n    display:flex;\r\n    flex-direction: column;\r\n    padding-left:15px;\r\n    font-family:Tahoma;\r\n    margin-bottom: 15px;\r\n    .title{\r\n        margin-top:6px;\r\n        font-size: ${FontSize[24]};\r\n        margin-bottom:10px;\r\n        color: ${Colors.blue}\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color: ${Colors.blue};\r\n    }\r\n    .corpTypeUpdate{\r\n        display:flex;\r\n        flex-direction:row;\r\n        align-items:center;\r\n        margin-top:20px;\r\n    }\r\n    .corpPicture{\r\n        border-radius:50%;\r\n    }\r\n    .corpPicture, .typeIcon{\r\n        width:25px;\r\n        height:25px;\r\n        margin-left:5px;\r\n        margin-right:5px;\r\n    }\r\n    .text{\r\n        font-size: ${FontSize[18]};\r\n    }\r\n    h1{\r\n        font-weight:bold;\r\n        font-size: ${FontSize[24]};\r\n        margin-left: 10px;\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\n\r\nconst Posts =  ({posts, loading} : {posts: any[], loading: boolean}) => \r\n{   \r\n    const { currentUser } = useSelector<IState, IUsersReducer>(state => ({\r\n        ...state.users\r\n    }));\r\n    \r\n    if(loading){\r\n        return <h2>Loading ...</h2>\r\n    }\r\n    return (\r\n        <div>\r\n            {posts.map( post => ( \r\n                <Container key={post.id}>\r\n\r\n                    <div className='title'>\r\n                        {post.title}\r\n                    </div>\r\n\r\n                    <div className='text'>\r\n                        <p>\r\n                            {post.body}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className='corpTypeUpdate'>\r\n                        <img className='corpPicture' src=\"./images/sas.jpg\"/> \r\n                        <p className='corpName'>Susbid. corp.</p>\r\n                        <h1>·</h1> \r\n                        <img className='typeIcon' src=\"./icons/entities2.png\"/> \r\n                        <p className=\"Type\">Corporate</p>\r\n                        <h1>·</h1>\r\n                        <p className=\"lastUpdate\">Updated 3 days ago by {currentUser?.name}.</p>\r\n                    </div>\r\n                </Container> \r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Posts;\r\n\r\n","import axios from 'axios';\r\nimport {FC, useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Colors} from \"../../../styledHelpers/Colors\";\r\nimport Posts from './Posts/Posts';\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n    height: 800px;\r\n    margin-top:20px;\r\n`;\r\n\r\nconst PaginationButtons = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    button{\r\n        width:40px;\r\n        height:40px;\r\n        background-color: ${Colors.white};\r\n        border: 1px solid ${Colors.gray};\r\n    }\r\n    .outerButton{\r\n        width:90px;\r\n    }\r\n`;\r\nconst BottomContainer: FC = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(5);\r\n\r\n    useEffect(() =>{\r\n        const fetchPosts = async () => {\r\n            setLoading(true);\r\n            const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n            setPosts(res.data);\r\n            setLoading(false);\r\n        }\r\n        fetchPosts();\r\n    }, []);\r\n    \r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n    const maxPage = posts.length / postsPerPage;\r\n\r\n    const goPrevious = () => {\r\n        if (currentPage > 1) {\r\n            changePage(currentPage - 1);\r\n        }\r\n    }\r\n\r\n    const goNext = () => {\r\n        if (currentPage < maxPage) {\r\n            changePage(currentPage + 1);\r\n        }\r\n    }\r\n\r\n    const changePage = (pageNumber: number) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    return ( \r\n        <Wrapper>      \r\n           <Posts posts={currentPosts} loading={loading}/>\r\n\r\n           <PaginationButtons>\r\n                <button onClick={goPrevious} className='outerButton'>PREVIOUS</button>\r\n                \r\n                <button onClick={() => changePage(1)}>\r\n                    01\r\n                </button>\r\n\r\n                <button className='mx-4'>...</button>\r\n                \r\n\r\n                {currentPage - 1 > 0 &&\r\n                    <button onClick={() => changePage(currentPage - 1)} className='mr-2'>\r\n                        {String(currentPage - 1).padStart(2, '0')}\r\n                    </button>\r\n                }\r\n\r\n                <button className='text-gray-800'>{String(currentPage).padStart(2, '0')}</button>\r\n\r\n                {currentPage + 1 <= maxPage &&\r\n                    <button onClick={() => changePage(currentPage + 1)} className='ml-2'>\r\n                        {String(currentPage + 1).padStart(2, '0')}\r\n                    </button>\r\n                }\r\n\r\n                <button className='mx-4'>...</button>\r\n\r\n                <button onClick={() => changePage(maxPage)}>\r\n                    {String(maxPage).padStart(2, '0')}\r\n                </button>\r\n\r\n                <button onClick={goNext} className='outerButton'>NEXT</button>\r\n                \r\n            </PaginationButtons>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default BottomContainer;\r\n\r\n\r\n\r\n\r\n \r\n","import {FC} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../../../styledHelpers/Colors\";\r\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid lightgrey;\r\n  background-color: ${Colors.white};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  background: url(\"./images/sign2.jpg\");\r\n  background-size: cover;\r\n  background-position-y: center;\r\n  width:100%;\r\n  height: 220px;\r\n`;\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: ${FontSize[20]};\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px 14px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 14px;\r\n`;\r\n\r\nconst WorkspacesHeader: FC = () => {\r\n  return (\r\n      <Wrapper>\r\n          <Header/>\r\n          <InnerWrapper>\r\n              <img src=\"./icons/contract.jpg\"/>\r\n              <Main>\r\n                  <ContentWrapper>\r\n                      <Title>Client contract</Title>\r\n                  </ContentWrapper>\r\n                  <Text>\r\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt ipsam pariatur fuga quam.\r\n                  </Text>\r\n              </Main>\r\n          </InnerWrapper>\r\n      </Wrapper>\r\n  );\r\n}\r\nexport default WorkspacesHeader;","import {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  background: rgba(255, 255, 255, 0.3);\n  border: 1px solid #${Colors};\n  padding: 8px 14px;\n  border-radius: 8px;\n  button{\n    background-color:rgba(255, 255, 255, 0.3); \n    border:none;\n    min-width: 30px;\n    border-radius: 10px;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.div`\n  margin-bottom: 14px;\n  font-size: ${FontSize[20]};\n  color: ${Colors.gray};\n`;\n\nconst Content = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${Colors.white};\n  padding: 14px;\n  border: 1px solid ${Colors.lightGray};\n  border-radius: 5px;\n`;\n\nconst CellIcon = styled.div`\n  margin-bottom: 8px;\n`;\n\nconst CellTitle = styled.div`\n  font-size: ${FontSize[22]};\n  margin-bottom: 15px;\n`;\n\nconst CellBody = styled.div``;\n\nconst WorkspacesCollapse: FC = () => {\n    const [hidden, setHidden] = useState<boolean>(false);\n    const handleCollapse = () => setHidden(!hidden);\n\n    return (\n        <Wrapper>\n            <Header>\n                <Title>Start working on corporate matters</Title>\n                <button onClick={handleCollapse}> {hidden ? 'Show' : 'X'}</button>\n            </Header>\n            {!hidden &&\n                <Content>\n                    <Cell>\n                        <CellIcon><img src='./images/entity.png' /></CellIcon>\n                        <CellTitle>Explore your <strong>entities</strong></CellTitle>\n                        <CellBody>Take a few minutes to look at the most important elements and specificities of your entities</CellBody>\n                    </Cell>\n                    <Cell>\n                        <CellIcon><img src='./images/structure.png' /></CellIcon>\n                        <CellTitle>Structure the <strong>ownership</strong></CellTitle>\n                        <CellBody>Get a clear view of the ownership by looking at the relations between individuals and entities.</CellBody>\n                    </Cell>\n                    <Cell>\n                        <CellIcon><img src='./images/calendar.png' /></CellIcon>\n                        <CellTitle>Define your <strong>calendar</strong></CellTitle>\n                        <CellBody>Prepare future events by creating detailed plans around the life of your entity.</CellBody>\n                    </Cell>\n                </Content>\n            }\n        </Wrapper>\n    );\n}\n\nexport default WorkspacesCollapse;\n","import {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {IWorkspacesUpdate} from \"../../../../entities/workspaces-update\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  background: #fff;\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n  padding: 0.5rem 0.75rem;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.div`\n  font-size: ${FontSize[24]};\n  margin-bottom: 5px;\n  color: ${Colors.blue}\n`;\n\nconst Content = styled.div`\n  font-size: ${FontSize[18]};\n  margin-bottom: 10px;\n`;\n\nconst Information = styled.div`\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  font-size: ${FontSize[16]};\n`;\n\nconst Company = styled.div``;\n\nconst Updated = styled.div``;\n\ninterface WorkspacesLatestUpdatesItemProps {\n    update: IWorkspacesUpdate;\n    className?: string;\n}\n\nconst WorkspacesLatestUpdatesItem: FC<WorkspacesLatestUpdatesItemProps> = (props) => {\n    return (\n        <Wrapper >\n            <Title >{props.update?.name}</Title>\n            <Content >{props.update?.body}</Content>\n            <Information >\n                <Company>{props.update?.type}</Company>\n                 • \n                <Updated>Updated 3 days ago by Glenna Reichert</Updated>\n            </Information>\n        </Wrapper>\n    );\n}\n\nexport default WorkspacesLatestUpdatesItem;\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {Building, FileEarmarkRichtext, HddStack, People} from \"react-bootstrap-icons\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 3px 14px;\n  border-radius: 2px;\n  color: ${Colors.black};\n  background-color: ${(props: { color: string }) => props.color};\n  svg {\n    margin-right: 5px;\n  }\n`;\n\ninterface Props {\n    name: string;\n    iconName?: string;\n    color: string;\n    onClick?: (event: React.MouseEvent, name: string) => void;\n}\n\nconst WorkspacesFilterButton: FC<Props> = (props) => {\n    const handleClick = (event: React.MouseEvent) => {\n        if (props.onClick) {\n            props.onClick(event, props.name);\n        }\n    }\n\n    const getIcon = () => {\n        switch (props.iconName) {\n            case 'building':\n                return (<Building />);\n            case 'people':\n                return (<People />);\n            case 'file':\n                return (<FileEarmarkRichtext />);\n            case 'questionnaire':\n                return (<HddStack />);\n            default:\n                return (<></>);\n        }\n    }\n\n    return (\n        <Wrapper color={props.color} onClick={handleClick}>\n            {getIcon()}\n            {props.name}\n        </Wrapper>\n    );\n}\nexport default WorkspacesFilterButton;","export interface IWorkspacesFilterButton {\n    name: string;\n    iconName: string;\n    color: string;\n}\n\nconst icons = {\n    building: 'building',\n    community: 'people',\n    file: 'file',\n    questionnaire: 'questionnaire'\n};\n\nconst WorkspacesFilterButtons: IWorkspacesFilterButton[] = [\n    {\n        name: 'All',\n        color: 'lightpink',\n        iconName: ''\n\n    },\n    {\n        name: 'SAS',\n        color: 'lightgreen',\n        iconName: icons.building\n    },\n    {\n        name: 'SARL',\n        color: 'lightblue',\n        iconName: icons.building\n    },\n    {\n        name: 'Secondary business',\n        color: 'yellow',\n        iconName: icons.building\n    },\n    {\n        name: 'Communities',\n        color: 'lightgray',\n        iconName: icons.community\n    },\n    {\n        name: 'POA',\n        color: 'lightgray',\n        iconName: icons.file,\n    },\n    {\n        name: 'Survey',\n        color: '#f1f1f1',\n        iconName: icons.questionnaire\n    },\n    {\n        name: '...',\n        color: '#f1f1f1',\n        iconName: ''\n    }\n];\n\nexport default WorkspacesFilterButtons;\n","import {IWorkspacesUpdate} from \"../../../../../entities/workspaces-update\";\n\nexport class WorkspacesDataProvider {\n    private readonly dataSet: IWorkspacesUpdate[] | null;\n    private static titleFilter?: string;\n    private static typeFilter: string = 'All';\n\n    constructor(works: IWorkspacesUpdate[] | null) {\n        this.dataSet = works;\n    }\n\n    titleFilter(title: string) {\n        WorkspacesDataProvider.titleFilter = title;\n    }\n  \n    typeFilter(typeFilter: string) {\n        if (typeFilter !== '...') {\n            WorkspacesDataProvider.typeFilter = typeFilter;\n        }\n    }\n\n    getFiltered(): IWorkspacesUpdate[] | null {\n        let result = this.dataSet;\n\n        if (result === null) return null;\n\n        if (WorkspacesDataProvider.titleFilter) {\n            result = result.filter(entry => entry.name.toLowerCase().includes(WorkspacesDataProvider.titleFilter?.toLowerCase() ?? ''));\n        }\n\n        if (WorkspacesDataProvider.typeFilter != 'All' && WorkspacesDataProvider.typeFilter != '') {\n            result = result.filter(entry => entry.type.toLowerCase() == WorkspacesDataProvider.typeFilter.toLowerCase());\n        }\n        return [...result];\n    }\n}\n","import React, {FC, useEffect, useState} from \"react\";\nimport styled  from \"styled-components\";\nimport WorkspacesLatestUpdatesItem from \"./WorkspacesLatestUpdatesItem\";\nimport WorkspacesFilterButton from \"./WorkspacesFilterButton\";\nimport WorkspacesFilterButtons from \"../../../../data/WorkspacesFilterButtons\";\nimport {useSelector} from \"react-redux\";\nimport {IState} from \"../../../../reducers\";\nimport {IWorkspacesUpdatesReducer} from \"../../../../reducers/workspacesUpdatesReducers\";\nimport {WorkspacesDataProvider} from \"./DataProvider/WorkspacesDataProvider\";\nimport {IWorkspacesUpdate} from \"../../../../entities/workspaces-update\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  h2{\n    font-size: ${FontSize[24]};\n  }\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FilterButtons = styled(Filters)`\n  margin-top: 8px;\n  justify-content: space-between;\n`;\n\nconst TitleFilter = styled.input`\n  border: 1px solid ${Colors.lightGray};\n  background: ${Colors.white} url(\"/icons/search.png\") no-repeat;\n  background-position-x: calc(100% - 10px);\n  background-position-y: center;\n  background-size: 14px 14px;\n  padding: 5px 30px 5px 10px;\n  width: 200px;\n  color: ${Colors.gray};\n`;\n\nconst Content = styled.div`\n  margin-top: 1rem;\n`;\n\nconst WorkspacesLatestUpdates: FC = () => {\n    const { workspacesUpdates } = useSelector<IState, IWorkspacesUpdatesReducer>(state => ({\n        ...state.workspacesUpdates\n    }));\n\n    const workspacesUpdatesDataProvider = new WorkspacesDataProvider(workspacesUpdates);\n    const [titleFilter, setTitleFilter] = useState('');\n    const [workspacesUpdatesData, setWorkspacesUpdatesData] = useState<IWorkspacesUpdate[] | null>(() => workspacesUpdatesDataProvider.getFiltered());\n  \n    useEffect(() => {\n      if (workspacesUpdatesData === null) {\n          const wudp = new WorkspacesDataProvider(workspacesUpdates);\n          setWorkspacesUpdatesData(wudp.getFiltered());\n      }\n    })\n\n    const handleTitleFilterInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTitleFilter(event.target.value);\n        workspacesUpdatesDataProvider.titleFilter(event.target.value);\n        setWorkspacesUpdatesData(workspacesUpdatesDataProvider.getFiltered());\n    }\n    const handleButtonFilterClick = (event: React.MouseEvent, typeName: string) => {\n        workspacesUpdatesDataProvider.typeFilter(typeName);\n        setWorkspacesUpdatesData(workspacesUpdatesDataProvider.getFiltered());\n    }\n\n    return (\n        <Wrapper>\n            <Header>\n                <h2>Latest updates</h2>\n                <Filters>\n                    <TitleFilter onInput={handleTitleFilterInput} placeholder='Search...' />\n                </Filters>\n            </Header>\n            <FilterButtons>\n                {WorkspacesFilterButtons.map(button => (\n                    <WorkspacesFilterButton name={button.name} color={button.color} iconName={button.iconName} onClick={handleButtonFilterClick} />\n                ))}\n            </FilterButtons>\n            <Content>\n                {workspacesUpdatesData?.slice((4 * 1), 4 * 3).map(entry => {\n                    return (\n                        <WorkspacesLatestUpdatesItem key={entry.id} update={entry} />\n                    )\n                })}\n            </Content>\n        </Wrapper>\n    );\n}\nexport default WorkspacesLatestUpdates;","import {IWorkspacesUpdate} from \"../entities/workspaces-update\";\n\nexport const GET_WORKSPACES_UPDATES = 'GET_WORKSPACES_UPDATES';\n\nexport interface IWorkTypes {\n    GET_WORKSPACES_UPDATES: {\n        workspacesUpdates: IWorkspacesUpdate[]\n    }\n}","import {IWork} from \"../entities/work\";\n\nexport const GET_YOUR_WORKS = 'GET_YOUR_WORK';\n\nexport interface IWorkTypes {\n    GET_YOUR_WORKS: {\n        works: IWork[]\n    }\n}","import {IPublication} from \"../entities/publication\";\n\nexport const GET_LATEST_PUBLICATIONS = 'GET_LATEST_PUBLICATIONS';\n\nexport interface IPublicationTypes {\n    GET_LATEST_PUBLICATIONS: {\n        latestPublications: IPublication[]\n    }\n}","import {combineReducers } from 'redux';\r\n\r\nimport users, { IUsersReducer } from \"./usersReducers\";\r\nimport works, { IWorksReducer } from \"./worksReducers\";\r\nimport publications, { IPublicationsReducer } from \"./publicationsReducers\";\r\nimport workspacesUpdates, {IWorkspacesUpdatesReducer} from \"./workspacesUpdatesReducers\";\r\n\r\nexport interface IState{\r\n    users: IUsersReducer;\r\n    works: IWorksReducer;\r\n    publications: IPublicationsReducer;\r\n    workspacesUpdates: IWorkspacesUpdatesReducer;\r\n}\r\n\r\nexport default combineReducers({\r\n    users,\r\n    works,\r\n    publications,\r\n    workspacesUpdates\r\n})\r\n\r\n","import {ISingleUser} from '../entities/users';\r\nimport * as actionTypes from '../actions/userTypes';\r\n\r\nexport interface IUsersReducer {\r\n    usersList: ISingleUser[];\r\n    currentUser: ISingleUser | null;\r\n    someData: string;\r\n}\r\n\r\nconst defaultState = (): IUsersReducer => ({\r\n    usersList: [],\r\n    currentUser: null,\r\n    someData: 'Ala już nie ma kota.'\r\n});\r\n\r\nexport default (state = defaultState(), action: any) => {\r\n    switch(action.type){\r\n\r\n        case actionTypes.GET_USERS: {\r\n            const data: actionTypes.IUserTypes['GET_USERS'] = action;\r\n            return {\r\n                ...state,\r\n                usersList: data.usersList\r\n            } \r\n        } \r\n\r\n        case actionTypes.GET_CURRENT_USER: {\r\n            const data: actionTypes.IUserTypes['GET_CURRENT_USER'] = action;\r\n            return {\r\n                ...state,\r\n                currentUser: data.user\r\n            }\r\n        }\r\n\r\n        case actionTypes.PUSH_DATA: {\r\n            const data: actionTypes.IUserTypes['PUSH_DATA'] = action;\r\n            return{\r\n                ...state,\r\n                someData: data.someData\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n","import * as actionTypes from '../actions/workTypes';\nimport { IWork } from '../entities/work';\n\nexport interface IWorksReducer {\n    works: IWork[] | null;\n}\n\nconst defaultState = (): IWorksReducer => ({\n    works: null,\n});\n\nexport default (state = defaultState(), action: any) => {\n    switch (action.type) {\n        case actionTypes.GET_YOUR_WORKS: {\n            const data: actionTypes.IWorkTypes['GET_YOUR_WORKS'] = action;\n            return {\n                ...state,\n                works: data.works\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\n","import * as actionTypes from \"../actions/publicationTypes\";\nimport { IPublication } from \"../entities/publication\";\n\nexport interface IPublicationsReducer {\n    latestPublications: IPublication[];\n}\n\nconst defaultState = (): IPublicationsReducer => ({\n    latestPublications: []\n});\n\nexport default (state = defaultState(), action: any) => {\n    switch (action.type) {\n        case actionTypes.GET_LATEST_PUBLICATIONS: {\n            const data: actionTypes.IPublicationTypes['GET_LATEST_PUBLICATIONS'] = action;\n            return {\n                ...state,\n                latestPublications: data.latestPublications\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n","import * as actionTypes from '../actions/workspacesUpdateTypes';\nimport {IWorkspacesUpdate} from \"../entities/workspaces-update\";\n\nexport interface IWorkspacesUpdatesReducer {\n    workspacesUpdates: IWorkspacesUpdate[] | null;\n}\n\nconst defaultState = (): IWorkspacesUpdatesReducer => ({\n    workspacesUpdates: null,\n});\n\nexport default (state = defaultState(), action: any) => {\n    switch (action.type) {\n        case actionTypes.GET_WORKSPACES_UPDATES: {\n            const data: actionTypes.IWorkTypes['GET_WORKSPACES_UPDATES'] = action;\n            return {\n                ...state,\n                workspacesUpdates: data.workspacesUpdates\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import {FC,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport WorkspacesHeader from \"./WorkspacesHeader/WorkspacesHeader\";\r\nimport WorkspacesCollapse from \"./WorkspacesCollapse/WorkspacesCollapse\"\r\nimport WorkspacesLatestUpdates from \"./WorkspacesLatestUpdates/WorkspacesLatestUpdates\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getWorkspacesUpdates} from \"../../../actions/workspacesUpdatesActions\";\r\n\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst Workspaces: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    type GetWorkspacesUpdates = ReturnType<typeof getWorkspacesUpdates>;\r\n\r\n    useEffect(() => {\r\n        dispatch<GetWorkspacesUpdates>(getWorkspacesUpdates());\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <WorkspacesHeader/>\r\n            <WorkspacesCollapse/>\r\n            <WorkspacesLatestUpdates/>\r\n        </Wrapper>\r\n    );\r\n}\r\nexport default Workspaces;\r\n\r\n","import {Dispatch} from \"redux\";\nimport _ from 'lodash';\nimport * as actionTypes from './workspacesUpdateTypes';\nimport store from \"../tools/store\";\nimport {IWorkspacesUpdate} from \"../entities/workspaces-update\";\n\n\nexport const getWorkspacesUpdates = (): Promise<IWorkspacesUpdate[]> => ((dispatch: Dispatch) => {\n    return fetch('https://jsonplaceholder.typicode.com/comments')\n        .then(response => response.json())\n        .then(async (workspacesUpdates: IWorkspacesUpdate[]) => {\n            for (const workspacesUpdate of workspacesUpdates) {\n                const userId = Math.floor(Math.random() * 10) + 1;\n                const users = store.getState().users.usersList;\n                const followed = userId % 2 == 0;\n                const type: string = _.sample(['SAS', 'SARL', 'Secondary business', 'Communities', 'POA', 'Survey']) ?? 'undefined';\n\n                workspacesUpdate.author = users[userId];\n                workspacesUpdate.followed = followed;\n                workspacesUpdate.type = type;\n            }\n\n            dispatch({\n                type: actionTypes.GET_WORKSPACES_UPDATES,\n                workspacesUpdates\n            })\n        });\n}) as any;","import {Dispatch, FC, SetStateAction} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {IFilter} from \"./Entities\";\r\n\r\nconst Wrapper = styled.div`\r\n    select{\r\n      margin-left:10px;\r\n    }\r\n    input{\r\n      margin-left: 10px;\r\n    }\r\n`;\r\n\r\nconst Row = styled.div`\r\n    margin-top:10px;\r\n`;\r\n\r\ninterface Props {\r\n    options: IFilter[];\r\n    setOptions: Dispatch<SetStateAction<IFilter[]>>;\r\n}\r\n\r\nconst Filter: FC<Props> = (props) => {\r\n\r\n    const addNew = () => {\r\n        const newOption: IFilter = {\r\n            id: `${Math.random()}`,\r\n            field: 'Company',\r\n            operator: 'Is',\r\n            value: ''\r\n        };\r\n\r\n        props.setOptions([...props.options, newOption]);\r\n    }\r\n\r\n    const removeOption = (optionId: string) => {\r\n        const newOptions = props.options.filter(option => option.id != optionId);\r\n        props.setOptions(newOptions);\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            {props.options.map(option => (\r\n               <div data-id={option.id}>\r\n                   <button onClick={() => removeOption(option.id)}>X</button>\r\n                   Where\r\n                   <select>\r\n                       <option value='Status'>Company</option>\r\n                       <option value='Company'>Status</option>\r\n                   </select>\r\n                   <select>\r\n                       <option value='is'>Is</option>\r\n                       <option value='contains'>Contains</option>\r\n                   </select>\r\n                   <input placeholder='Value' />\r\n               </div>\r\n            ))}\r\n            <Row>\r\n                <button onClick={addNew}>Add item</button>\r\n            </Row>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import {FC, FormEvent, useEffect, useState} from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {Colors} from \"../../../../src/styledHelpers/Colors\";\r\nimport {FontSize} from \"../../../../src/styledHelpers/FontSize\";\r\nimport {IPhoto} from \"../../../entities/photo\";\r\nimport {getPhoto} from \"../../../actions/photoActions\";\r\nimport useDropdown from \"react-dropdown-hook\";\r\nimport Filter from \"./Filter\";\r\nimport _ from \"lodash\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    button{\r\n        border:none;\r\n    };\r\n    .pageTitle{\r\n        font-size: ${FontSize[24]};\r\n        margin-bottom: 10px;\r\n    }\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props: {displayType: number}) => props.displayType == 0 ? 'repeat(4, 1fr)' : '1fr'};\r\n    gap: 10px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n    display:flex;\r\n    border-radius: 10px;\r\n    background-color: ${Colors.white};\r\n    .textContainer{\r\n        margin-left:5px;\r\n    };\r\n    .entityName{\r\n        font-size: ${FontSize[20]};\r\n        color: ${Colors.blue};\r\n        font-weight: bold;\r\n        margin-top: 20px;\r\n        margin-bottom: 50px;\r\n    };\r\n    .entityAddress{\r\n        color: ${Colors.gray};\r\n    };\r\n`;\r\n\r\nconst Filters = styled.div`\r\n    .innerFilterWrapper{\r\n        margin-top:10px;\r\n        display:flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 10px;\r\n    };\r\n    button{\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nconst TitleFilter = styled.input`\r\n    border: 1px solid lightgrey;\r\n    background: ${Colors.white} url(\"/icons/search.png\") no-repeat;\r\n    background-position-x: calc(100% - 10px);\r\n    background-position-y: center;\r\n    background-size: 14px 14px;\r\n    padding: 5px 30px 5px 10px;\r\n    width: 200px;\r\n    color: grey;\r\n    display:flex;\r\n    height: 20px;\r\n    &:focus {\r\n        outline: 1px solid ${Colors.black};\r\n    };\r\n`;\r\n\r\ninterface Entity {\r\n    name: string;\r\n    address: string;\r\n    photo: IPhoto;\r\n}\r\nexport interface IFilter {\r\n    id: string;\r\n    field: string;\r\n    operator: string;\r\n    value: string;\r\n}\r\nconst Entities: FC = () => {\r\n\r\n    const companyName = [ 'Subsid Corp ltd', 'World Company SAS'];\r\n    const street = ['Caracas 1050'];\r\n    const city = ['Distrio Capital'];\r\n    const country = ['Venezuela'];\r\n\r\n    const [sort, setSort] = useState('AZ');\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [displayType, setDisplayType] = useState<number>(0);\r\n    const [filtersChanged, setFiltersChanged] = useState(false);\r\n    const [followedFilter, setFollowedFilter] = useState(false);\r\n    const [titleFilter, setTitleFilter] = useState('');\r\n    const [filterRef, filtersOpen, toggleFilters] = useDropdown();\r\n    const [entities, setEntities] = useState<Entity[]>([]);\r\n    const [options, setOptions] = useState<IFilter[]>([]);\r\n    const [genericEntities, setGenericEntities] = useState<Entity[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fillEntities = async () => {\r\n            const ent: Entity[] = [];\r\n            for (let i = 1; i <= 24; i++) {\r\n                const entity: Entity = {\r\n                    name: `${_.sample(companyName)}`,\r\n                    address: `${street}, ${city}, ${country}`,\r\n                    photo: await getPhoto(i),\r\n                };\r\n                ent.push(entity);\r\n            }\r\n            const compare = (a: Entity, b: Entity) => {\r\n                if (a.name[0] < b.name[0]) return -1;\r\n                if (a.name[0] > b.name[0]) return 1;\r\n                return 0;\r\n            }\r\n            ent.sort(compare);\r\n            setEntities(ent);\r\n            setGenericEntities(ent);\r\n            setInitialized(true);\r\n        }\r\n\r\n        if (!initialized) {\r\n            fillEntities();\r\n        }\r\n\r\n        if (filtersChanged) {\r\n            applyFilters();\r\n            setFiltersChanged(false);\r\n        }\r\n    });\r\n\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(window.location.href);\r\n    }\r\n\r\n    const toggleSort = () => {\r\n        setSort(sort == 'AZ' ? 'ZA' : 'AZ');\r\n        setFiltersChanged(true);\r\n    };\r\n    const handleTitleFilterInput = (ev: FormEvent) => {\r\n        const target = ev.target as HTMLInputElement;\r\n        setTitleFilter(target.value);\r\n        setFiltersChanged(true);\r\n    };\r\n   \r\n    const applyFilters = () => {\r\n        let collection = [...genericEntities];\r\n        if(titleFilter.length > 0) {\r\n            collection = collection.filter(entity => entity.name.toLowerCase().includes(titleFilter.toLowerCase()));\r\n        }\r\n        if(sort == 'ZA') {\r\n            collection = collection.reverse();\r\n        }\r\n        setEntities([...collection]);\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <div className='pageTitle'>Entities</div>\r\n                <div className='displayTypeButtonsContainer'>\r\n                    <button onClick={() => setDisplayType(0)}> {displayType == 0 ? 'Mosaic' : 'Mosaic'}</button> \r\n                    <button onClick={() => setDisplayType(1)}> {displayType == 1 ? 'List' : 'List'}</button>\r\n                </div>\r\n            </Header>\r\n\r\n            <Filters>\r\n                <div>\r\n                    <button onClick={toggleSort} >{sort == 'AZ' ? (<div/>) : (<div/>)} Sort</button>\r\n                    <button  onClick={toggleFilters}>Filter</button>\r\n                    <button onClick={copyLink}> Share</button>\r\n                </div>\r\n\r\n                <div className=\"innerFilterWrapper\">\r\n                    <div> {filtersOpen && <Filter options={options} setOptions={setOptions} />}</div>\r\n                    <TitleFilter onInput={handleTitleFilterInput} placeholder='Search...' />\r\n                </div>\r\n            </Filters>\r\n\r\n            <Content displayType={displayType}>\r\n                {entities.map(entity => (\r\n                    <Card>\r\n                        <img className='entityImage' src={entity.photo.thumbnailUrl} />\r\n                        <div className=\"textContainer\">\r\n                            <div className=\"entityName\">{entity.name}</div>\r\n                            <div className=\"entityAddress\">{entity.address}</div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n}\r\nexport default Entities;\r\n","export interface ICell {\n    name: string;\n}\n\nexport interface ISection {\n    name: string;\n    cells: ICell[]\n}\n\nexport const EditMode = {\n    EnteredEditMode: 'profile-entered-edit-mode',\n    Saved: 'profile-saved',\n    Discarded: 'profile-discarded',\n};\n\nconst sections: ISection[] = [\n    {\n        name: 'Expertise',\n        cells: [\n            {\n                name: 'Mergers and acquisitions'\n            }\n        ]\n    },\n    {\n        name: 'Specialties',\n        cells: [\n            {\n                name: 'Cross border operation'\n            },\n            {\n                name: 'Transaction over 500M€/$'\n            }\n        ]\n    },\n    {\n        name: 'Admission to practice law',\n        cells: [\n            {\n                name: 'Paris bar association'\n            },\n            {\n                name: 'Tunisian bar association'\n            }\n        ]\n    },\n    {\n        name: 'Counties',\n        cells: [\n            {\n                name: 'Tunisia'\n            }\n        ]\n    }\n];\n\nexport default sections;\n","import React, {Dispatch, FC, SetStateAction, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport {useSelector} from \"react-redux\";\nimport {IState} from \"../../../../reducers\";\nimport {IUsersReducer} from \"../../../../reducers/usersReducers\";\nimport {Link} from \"react-router-dom\";\nimport {Briefcase, Chat, FileEarmarkRichtext, Pencil} from \"react-bootstrap-icons\";\nimport {emitCustomEvent} from \"react-custom-events\";\nimport {EditMode} from \"../../../../data/ProfileAdditionalInfoData\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  a{\n      text-decoration:none;\n      color: ${Colors.blue};\n  }\n`;\n\nconst TopButtons = styled.div`\n  align-self: flex-end;\n  width: fit-content;\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nconst Button = styled.button`\n  gap: 4px;\n  display: flex;\n  align-items: center;\n  background-color: ${Colors.white};\n  border: none;\n  a{\n      text-decoration:none;\n      color: ${Colors.black};\n  }\n`;\n\nconst UserInnerWrapper = styled.div`\n  height: fit-content;\n  display:flex;\n  flex-direction: row;\n    .contanier{\n        margin-left:10px;\n        display:flex;\n        flex-direction: row;\n        justify-content: space-between;\n        width: 90%;\n        button{\n            background-color: ${Colors.white};\n            border:none;\n        }\n    }\n    .userInfo{\n        display:flex;\n        flex-direction: column;\n        gap:5px;\n    }\n    .editmode{\n       margin-bottom: 20px;\n    }\n`;\n\nconst ProfilePictureWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-self: center;\n    align-items: center;\n    align-self: center;\n`;\n\nconst ProfilePicture = styled.img`\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n`;\n\nconst Input = styled.input`\n    border: 1px solid ${Colors.black};\n    padding: 0 10px;\n    height: 25px;\n`;\n\ninterface ProfileHeaderProps {\n    className?: string;\n    editMode: boolean;\n    setEditMode: Dispatch<SetStateAction<boolean>>;\n}\n\ninterface IUserCopy {\n    [key: string]: string;\n    name: string;\n    companyName: string;\n    city: string;\n    email: string;\n    status: string;\n    phone: string;\n}\n\nconst ProfileHeader: FC<ProfileHeaderProps> = (prop) => {\n    \n    const { currentUser } = useSelector<IState, IUsersReducer>(state => ({\n        ...state.users\n    }));\n\n    const makeUserCopy = (): IUserCopy|null => {\n        console.log(currentUser);\n        if (!currentUser) return null;\n\n        return {\n            name: currentUser.name,\n            companyName: currentUser.company.name,\n            city: currentUser.address.city,\n            email: currentUser.email,\n            phone: currentUser.phone,\n            status: 'Partner'\n        };\n    };\n\n    const [user, setUser] =  useState<IUserCopy|null>(() => makeUserCopy());\n    const [userCopy, setUserCopy] = useState<IUserCopy|null>(() => makeUserCopy());\n\n    if (user === null && currentUser) {\n        setUser(() => makeUserCopy());\n    }\n\n    const saveChanges = () => {\n        prop.setEditMode(false);\n        emitCustomEvent(EditMode.Saved);\n    }\n\n    const discardChanges = () => {\n        if (!currentUser) return;\n        if (userCopy) {\n            setUser({...userCopy});\n        }\n        prop.setEditMode(false);\n        emitCustomEvent(EditMode.Discarded);\n    }\n\n    const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.target as HTMLInputElement;\n\n        if (user) {\n            const newUserData = {...user};\n            newUserData[target.name] = target.value;\n            setUser(newUserData);\n        }\n    };\n\n    const changeEditMode = () => {\n        if (!user) return;\n        const entersEditMode = !prop.editMode;\n        if (entersEditMode) {\n            setUserCopy({...user});\n            emitCustomEvent(EditMode.EnteredEditMode);\n        }\n        prop.setEditMode(!prop.editMode);\n    };\n\n    return (\n        <Wrapper className={prop?.className}>\n            <TopButtons>\n                <Button>\n                    <Chat/> Message\n                </Button>\n                <Button>\n                    <FileEarmarkRichtext />\n                    Create a request\n                </Button>\n                <Button>\n                    <Briefcase />\n                    Add to a cluster\n                </Button>\n                <Button>\n                    <Link to='/'>X</Link>\n                </Button>\n            </TopButtons>\n\n            <UserInnerWrapper>\n                <ProfilePictureWrapper>\n                    <ProfilePicture src={currentUser?.photo.thumbnailUrl}/>\n                    <Link to='#'>See profile</Link>\n                </ProfilePictureWrapper>\n              \n                <div className=\"contanier\">\n                    <div className=\"userInfo\">\n                        <div>\n                            {prop.editMode ?\n                                (<Input value={user?.name} name='name' onInput={handleInput} />):(user?.name)\n                            }\n                        </div>\n                        <div>\n                            {prop.editMode ?\n                                (<Input value={user?.companyName} name='companyName' onInput={handleInput}/>):(user?.companyName)\n                            }\n                        </div>\n                        <div/>\n                        <div>\n                            {prop.editMode ?\n                                (<Input value={user?.city} name='city' onInput={handleInput}/>):(user?.city)\n                            }\n                        </div>\n                      \n                        <div>\n                        {prop.editMode ?\n                            (<Input value={user?.status} name='status' onInput={handleInput}/>):(user?.status)\n                        }\n                        </div>\n                    </div>\n\n                    <div>\n                        <div className=\"editmode\">\n                            {prop.editMode ?\n                                (\n                                    <>\n                                        <button onClick={saveChanges}>Save</button>\n                                        <button onClick={discardChanges}>Discard</button>\n                                    </>\n                                ) : (\n                                    <button onClick={changeEditMode}>\n                                        <Pencil />\n                                    </button>\n                                )\n                            }\n                        </div>\n\n                        <div>\n                            {prop.editMode ?\n                                (<Input value={user?.email} name='email' onInput={handleInput}/>):(user?.email)\n                            }\n                        </div>\n                        <div>\n                            {prop.editMode ?\n                                (<Input value={user?.phone} name='phone' onInput={handleInput}/>):(user?.phone)\n                            }\n                        </div>\n                    </div>\n                </div>\n            </UserInnerWrapper>\n        </Wrapper>\n    );\n}\n\nexport default ProfileHeader;\n","import {FC, FormEvent, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {useSelector} from \"react-redux\";\nimport {IState} from \"../../../../../reducers\";\nimport {IUsersReducer} from \"../../../../../reducers/usersReducers\";\nimport {Plus} from \"react-bootstrap-icons\";\nimport {ISingleUser} from \"../../../../../entities/users\";\nimport { Colors } from \"../../../../../styledHelpers/Colors\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: fit-content;\n`;\n\nconst Select = styled.select`\n  border: 2px solid ${Colors.lightGray};\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  border: 1px solid ${Colors.lightGray};\n  padding: 3px 6px;\n  margin-left: 5px;\n`;\n\ninterface Props {\n    onAdd: (selectedUser: ISingleUser) => void;\n}\n\nconst UserDropdown: FC<Props> = (props) => {\n    const users = useSelector<IState, IUsersReducer>(state => ({\n        ...state.users\n    }));\n\n    const [selectedUser, setSelectedUser] = useState<ISingleUser|null>(null);\n\n    if (users && selectedUser == null) {\n        setSelectedUser(users.usersList[0]);\n    }\n\n    const selectHandler = (ev: FormEvent<HTMLSelectElement>) => {\n        const target = ev.target as HTMLSelectElement;\n        const userSelection = users.usersList.filter(user => user.id == +target.value);\n\n        setSelectedUser(userSelection[0]);\n    }\n\n    const submitHandler = () => {\n        if (selectedUser) {\n            props.onAdd(selectedUser);\n        }\n    }\n\n    return (\n        <Wrapper>\n            <Select onChange={selectHandler}>\n                {users.usersList.map(user => {\n                    return (<option value={user.id}>{user.name}</option>)\n                })}\n            </Select>\n            <Button onClick={submitHandler}>\n                <Plus />\n                Add\n            </Button>\n        </Wrapper>\n    );\n}\n\nexport default UserDropdown;\n","import {FC, FormEvent, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Plus} from \"react-bootstrap-icons\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: fit-content;\n`;\n\nconst Input = styled.input`\n  border: 1px solid lightgrey;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  border: 1px solid lightgrey;\n  padding: 3px 6px;\n  margin-left: 8px;\n`;\n\ninterface Props {\n    onAdd: (name: string) => void;\n}\n\nconst AttachmentForm: FC<Props> = (props) => {\n    const [attachmentName, setAttachmentName] = useState<string|null>(null);\n    const inputRef = useRef<HTMLInputElement|null>(null);\n\n    const handleInput = (ev: FormEvent<HTMLInputElement>) => {\n        const target = ev.target as HTMLInputElement;\n\n        if (target.files && target.files[0]) {\n            setAttachmentName(target.files[0].name);\n        }\n    };\n\n    const handleSubmit = () => {\n        if (attachmentName) {\n            props.onAdd(attachmentName);\n        }\n\n        if (inputRef?.current?.value) {\n            inputRef.current.value = '';\n        }\n    }\n\n    return (\n        <Wrapper>\n            <Input type='file' ref={inputRef} onChange={handleInput} />\n            <Button onClick={handleSubmit}>\n                <Plus />\n                Add\n            </Button>\n        </Wrapper>\n    );\n}\n\nexport default AttachmentForm;\n","import {FC, FormEvent, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Chat, FileRichtext, Person, Plus} from \"react-bootstrap-icons\";\nimport {useCustomEventListener} from \"react-custom-events\";\nimport {EditMode} from \"../../../../data/ProfileAdditionalInfoData\";\nimport UsersDropdown from \"./UserDropDown/UserDropdown\";\nimport {ISingleUser} from \"../../../../entities/users\";\nimport AttachmentForm from \"./AttachmentForm\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  padding: 10px;\n`;\n\nconst Section = styled.section`\n  margin-bottom: 20px;\n`;\n\nconst SectionTitle = styled.div`\n  color: ${Colors.gray};\n  font-size: ${FontSize[16]};\n`;\n\nconst SectionBody = styled.div`\n  font-size: ${FontSize[14]};\n`;\n\nconst Attachment = styled.div`\n  background: ${Colors.lightGray};\n  padding: 5px 8px;\n  margin: 5px 0;\n`;\n\nconst AttachmentBody = styled.div`\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  grid-template-columns: auto auto;\n  gap: 2px;\n`;\n\nconst Correspondent = styled(Attachment)`\n  margin-left: 2px;\n  button{\n      border:none;\n      background-color: ${Colors.lightGray};\n  }\n`;\n\nconst CorrespondentBody = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CorrespondentImage = styled.img`\n  height: 25px;\n  border-radius: 50%;\n`;\n\nconst CorrespondentFullName = styled.div`\n  margin-left: 5px;\n`;\n\nconst Button = styled.button`\n  width: fit-content;\n  display: flex;\n  gap: 7px;\n  align-items: center;\n  margin-left: 40px;\n`;\n\ninterface ICorrespondent {\n    id: number;\n    name: string;\n    photoUrl: string;\n}\n\ninterface IData {\n    hourlyFee: number;\n    attachments: string[];\n    correspondents: ICorrespondent[];\n}\n\ninterface Props {\n    editMode: boolean;\n}\n\nconst HourlyFeeInput = styled.input`\n  border: 1px solid ${Colors.lightGray};\n`;\n\nconst ProfileInformations: FC<Props> = (props) => {\n    const [data, setData] = useState<IData>({\n        hourlyFee: 610,\n        attachments: [\n            'the_one_to_rule_them_all.pdf'\n        ],\n        correspondents: [\n            {\n                id: 5,\n                name: 'Firstname Lastname',\n                photoUrl: './images/sas.jpg'\n            },\n            {\n                id: 6,\n                name: 'Firstname Lastname',\n                photoUrl: './images/sas.jpg'\n            }\n        ]\n    });\n    const [dataCopy, setDataCopy] = useState<IData>({...data});\n\n    useCustomEventListener(EditMode.EnteredEditMode, () => {\n        setDataCopy({...data});\n    });\n\n    useCustomEventListener(EditMode.Saved, () => {\n    });\n\n    useCustomEventListener(EditMode.Discarded, () => {\n        setData({...dataCopy});\n    });\n\n    const handleHourlyFeeInput = (ev: FormEvent<HTMLInputElement>) => setData({...data, hourlyFee: +(ev.target as HTMLInputElement).value});\n\n    const onAttachmentAdd = (name: string) => {\n        setData({\n            ...data,\n            attachments: [\n                ...data.attachments,\n                name\n            ]\n        })\n    };\n\n    const onCorrespondentAdd = (user: ISingleUser) => {\n        setData({\n            ...data,\n            correspondents: [\n                ...data.correspondents,\n                {\n                    id: user.id,\n                    name: user.name,\n                    photoUrl: user.photo.thumbnailUrl\n                }\n            ]\n        })\n    };\n\n    return (\n        <Wrapper>\n            <h2>Panel informations</h2>\n            <br></br>\n            <Section>\n                <SectionTitle>Hourly fee</SectionTitle>\n                <SectionBody>\n                    {props.editMode ?\n                        (<HourlyFeeInput value={data.hourlyFee} onInput={handleHourlyFeeInput} />) :\n                        data.hourlyFee\n                    } €/hour (Negociated)\n                </SectionBody>\n            </Section>\n            <Section>\n                <SectionTitle>Terms & conditions</SectionTitle>\n                <SectionBody>Monthly 10k€ retainer - see with Jeanny Smith</SectionBody>\n                {data.attachments.map(attachment => {\n                    return (\n                        <Attachment>\n                            <AttachmentBody>\n                                <FileRichtext />\n                                {attachment}\n                            </AttachmentBody>\n                        </Attachment>\n                    );\n                })}\n                {props.editMode &&\n                    (<AttachmentForm onAdd={onAttachmentAdd} />)\n                }\n            </Section>\n            <Section>\n                <h3>Services & projects</h3>\n                <SectionBody>Corporate M&A and international acquisitions</SectionBody>\n            </Section>\n            <Section>\n                <h3>Internal correspondents</h3>\n                <SectionBody>\n                    {data.correspondents.map(correspondent => {\n                        return (\n                            <Correspondent>\n                                <CorrespondentBody>\n                                    <CorrespondentImage src={correspondent.photoUrl} alt=\"userphoto\"/>\n                                    <CorrespondentFullName>\n                                        {`${correspondent.name}`}\n                                    </CorrespondentFullName>\n                                    <Button>\n                                        <Chat />\n                                        Message\n                                    </Button>\n                                    <Button>\n                                        <Person/>\n                                        Profile\n                                    </Button>\n                                </CorrespondentBody>\n                            </Correspondent>\n                        )\n                    })\n\n                    }\n                    {props.editMode &&\n                        (<UsersDropdown onAdd={onCorrespondentAdd} />)\n                    }\n                </SectionBody>\n            </Section>\n        </Wrapper>\n    );\n}\n\nexport default ProfileInformations;\n","import {FC, FormEvent, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {useCustomEventListener} from \"react-custom-events\";\nimport {EditMode} from \"../../../../data/ProfileAdditionalInfoData\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  padding-left:15px;\n  h2{\n    font-weight: 500;\n    font-size: ${FontSize[22]};\n    margin-bottom:30px;\n  }\n  .a{\n    display:flex;\n    margin-top:20px;\n    justify-content:flex-end;\n    padding-right:20px;\n  }\n  a{\n    text-decoration:none;\n    color: ${Colors.lightBlue};\n    font-size: ${FontSize[22]}\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  & > thead {\n    border-bottom: 1px solid ${Colors.lightGray};\n  }\n  & th {\n    text-align: left;\n  }\n  tr{\n      line-height:30px;\n  }\n  & .header{\n      font-size: ${FontSize[20]};\n  }\n  & tbody{\n    button{\n        border:none;\n        background-color: ${Colors.white}\n    }\n  }\n`;\n\nconst Input = styled.input`\n  border: 1px solid lightgrey;\n`;\n\ninterface IProposal {\n    name: string;\n    entity: string;\n    location: string;\n    expertise: string;\n    date: string;\n    firm: string;\n}\n\ninterface Props {\n    editMode?: boolean;\n}\n\nconst ProfileProposals: FC<Props> = (props) => {\n    const data: IProposal[] = [\n        {\n            name: 'Operation Ti...',\n            entity: 'Renaul Co...',\n            location: 'France',\n            expertise: '#Tax',\n            date: '20/01/2018',\n            firm: 'Racine',\n        },\n        {\n            name: 'Op. Prometh...',\n            entity: 'Renault HQ',\n            location: 'USA',\n            expertise: '#M&A',\n            date: '20/02/2019',\n            firm: 'Clifford chance',\n        },\n        {\n            name: 'Op. Latandre...',\n            entity: 'Renault Br...',\n            location: 'Italia',\n            expertise: '#Social',\n            date: '20/02/2019',\n            firm: 'SVZ',\n        },\n    ];\n    const emptyRecord = {\n        name: '',\n        entity: '',\n        location: '',\n        expertise: '',\n        date: '',\n        firm: '',\n    };\n\n    const [proposals, setProposals] = useState<IProposal[]>(data);\n    const [proposalsCopy, setProposalsCopy] = useState<IProposal[]>(data);\n    const [proposalRecord, setProposalRecord] = useState<IProposal>({...emptyRecord});\n\n    const inputHandler = (ev: FormEvent<HTMLInputElement>) => {\n        const target = ev.target as HTMLInputElement;\n\n        setProposalRecord({\n            ...proposalRecord,\n            [target.name]: target.value\n        });\n    };\n\n    const submitHandler = () => {\n        setProposals([\n            ...proposals,\n            proposalRecord\n        ]);\n        setProposalRecord({...emptyRecord});\n    };\n\n    useCustomEventListener(EditMode.EnteredEditMode, () => {\n        setProposalsCopy([...proposals]);\n    });\n\n    useCustomEventListener(EditMode.Saved, () => {\n    });\n\n    useCustomEventListener(EditMode.Discarded, () => {\n        setProposals([...proposalsCopy]);\n    });\n\n    return (\n        <Wrapper>\n            <h2>Proposals</h2>\n            <Table>\n                <thead>\n                    <tr className=\"header\">\n                        <th>Name</th>\n                        <th>Entity</th>\n                        <th>Location</th>\n                        <th>Expertise</th>\n                        <th>Date</th>\n                        <th>Firm</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {proposals.map(proposal => {\n                        return (\n                            <tr>\n                                <td>{proposal.name}</td>\n                                <td>{proposal.entity}</td>\n                                <td>{proposal.location}</td>\n                                <td>{proposal.expertise}</td>\n                                <td>{proposal.date}</td>\n                                <td>{proposal.firm}</td>\n                            </tr>\n                        );\n                    })}\n\n                    {props.editMode &&\n                        (\n                            <>\n                                <tr>\n                                    <td><Input name='name' value={proposalRecord.name} onInput={inputHandler} /></td>\n                                    <td><Input name='entity' value={proposalRecord.entity} onInput={inputHandler} /></td>\n                                    <td><Input name='location' value={proposalRecord.location} onInput={inputHandler} /></td>\n                                    <td><Input name='expertise' value={proposalRecord.expertise} onInput={inputHandler} /></td>\n                                    <td><Input name='date' value={proposalRecord.date} onInput={inputHandler} /></td>\n                                    <td><Input name='firm' value={proposalRecord.firm} onInput={inputHandler} /></td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={6}>\n                                        <button onClick={submitHandler}>+ Add</button>\n                                    </td>\n                                </tr>\n                            </>\n                        )\n                    }\n                </tbody>\n            </Table>\n            <div className='a'>\n                <Link to='#'>See more proposals</Link>\n            </div>\n        </Wrapper>\n    );\n}\n\nexport default ProfileProposals;\n","import {FC, FormEvent, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {useCustomEventListener} from \"react-custom-events\";\nimport {EditMode} from \"../../../../data/ProfileAdditionalInfoData\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  padding-left:15px;\n  h2{\n    font-weight: 500;\n    font-size: ${FontSize[22]};\n    margin-bottom:30px;\n  }\n  .a{\n    display:flex;\n    margin-top:20px;\n    padding-right:20px;\n  }\n  a{\n    text-decoration:none;\n    color: ${Colors.black};\n    font-size: ${FontSize[22]}\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  & > thead {\n    border-bottom: 1px solid ${Colors.lightGray};\n  }\n  & th {\n    text-align: left;\n  }\n  tr{\n      line-height:30px;\n  }\n  & .header{\n      font-size: ${FontSize[20]};\n  }\n  & tbody{\n    button{\n        border:none;\n        background-color: ${Colors.white}\n    }\n  }\n`;\n\nconst Input = styled.input`\n  border: 1px solid lightgrey;\n`;\n\ninterface IReview {\n    name: string;\n    entity: string;\n    location: string;\n    expertise: string;\n    date: string;\n}\n\ninterface Props {\n    editMode?: boolean;\n}\n\nconst ProfileInternalReviews: FC<Props> = (props) => {\n    const data: IReview[] = [\n        {\n            name: 'Operation Ti...',\n            entity: 'Renaul Co...',\n            location: 'France',\n            expertise: '#Tax',\n            date: '20/01/2018'\n        },\n        {\n            name: 'Op. Prometh...',\n            entity: 'Renault HQ',\n            location: 'USA',\n            expertise: '#M&A',\n            date: '20/02/2019'\n        },\n        {\n            name: 'Op. Latandre...',\n            entity: 'Renault Br...',\n            location: 'Italia',\n            expertise: '#Social',\n            date: '20/02/2019'\n        }\n    ];\n    const emptyProposal = {\n        name: '',\n        entity: '',\n        location: '',\n        expertise: '',\n        date: '',\n        firm: '',\n    };\n\n    const [proposals, setReview] = useState<IReview[]>(data);\n    const [proposalsCopy, setReviewCopy] = useState<IReview[]>(data);\n    const [proposalRecord, setReviewRecord] = useState<IReview>({...emptyProposal});\n\n    const inputHandler = (ev: FormEvent<HTMLInputElement>) => {\n        const target = ev.target as HTMLInputElement;\n\n        setReviewRecord({\n            ...proposalRecord,\n            [target.name]: target.value\n        });\n    };\n\n    const submitHandler = () => {\n        setReview([\n            ...proposals,\n            proposalRecord\n        ]);\n        setReviewRecord({...emptyProposal});\n    };\n\n    useCustomEventListener(EditMode.EnteredEditMode, () => {\n        setReviewCopy([...proposals]);\n    });\n\n    useCustomEventListener(EditMode.Saved, () => {\n    });\n\n    useCustomEventListener(EditMode.Discarded, () => {\n        setReview([...proposalsCopy]);\n    });\n\n    return (\n        <Wrapper>\n            <h2>Internal reviews</h2>\n            <Table>\n                <thead>\n                    <tr className=\"header\">\n                        <th>Name</th>\n                        <th>Entity</th>\n                        <th>Location</th>\n                        <th>Expertise</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {proposals.map(proposal => {\n                        return (\n                            <tr>\n                                <td>{proposal.name}</td>\n                                <td>{proposal.entity}</td>\n                                <td>{proposal.location}</td>\n                                <td>{proposal.expertise}</td>\n                                <td>{proposal.date}</td>\n                                <td>                     </td>\n                            </tr>\n                        );\n                    })}\n                    {props.editMode &&\n                        (\n                            <>\n                                <tr>\n                                    <td><Input name='name' value={proposalRecord.name} onInput={inputHandler} /></td>\n                                    <td><Input name='entity' value={proposalRecord.entity} onInput={inputHandler} /></td>\n                                    <td><Input name='location' value={proposalRecord.location} onInput={inputHandler} /></td>\n                                    <td><Input name='expertise' value={proposalRecord.expertise} onInput={inputHandler} /></td>\n                                    <td><Input name='date' value={proposalRecord.date} onInput={inputHandler} /></td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={6}>\n                                        <button onClick={submitHandler}>+ Add</button>\n                                    </td>\n                                </tr>\n                            </>\n                        )\n                    }\n                </tbody>\n            </Table>\n            <div className='a'>\n                <Link to='#'>See more Reviews</Link>\n            </div>\n        </Wrapper>\n    );\n}\nexport default ProfileInternalReviews;\n\n\n","import {FC, FormEvent, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {useCustomEventListener} from \"react-custom-events\";\nimport {EditMode} from \"../../../../data/ProfileAdditionalInfoData\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  padding-left:15px;\n  padding-bottom:30px;\n  h2{\n    font-weight: 500;\n    font-size: ${FontSize[22]};\n    margin-top:25px;\n    margin-bottom:10px;\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  & > thead {\n    border-bottom: 1px solid ${Colors.lightGray};\n  }\n  & th {\n    text-align: left;\n  }\n  tr{\n    line-height:22px;\n  }\n  & .header{\n    font-size: ${FontSize[20]};\n  }\n  & tbody{\n    button{\n        border:none;\n        background-color: ${Colors.white}\n    }\n  }\n`;\n\nconst Input = styled.input`\n  border: 1px solid lightgrey;\n`;\n\ninterface IFee {\n    year: string;\n    cost_center: string;\n    total_amount: string;\n    law_firm: string;\n   \n}\n\ninterface Props {\n    editMode?: boolean;\n}\n\nconst ProfileAmountOfFees: FC<Props> = (props) => {\n    const data: IFee[] = [\n        {\n            year: '2019',\n            cost_center: 'CS 153',\n            total_amount: '3 500€',\n            law_firm: 'Clifford chance',\n           \n        },\n        {\n            year: '2018',\n            cost_center: 'CS 153',\n            total_amount: '9 500€',\n            law_firm: 'Linklaters',\n        },\n        {\n            year: '2017',\n            cost_center: 'CS 47',\n            total_amount: '10 500€',\n            law_firm: 'Linklaters',\n        },\n        {\n            year: '',\n            cost_center: 'CS 153',\n            total_amount: '18 500€',\n            law_firm: 'Linklaters',\n        },\n        {\n            year: '',\n            cost_center: 'CS 32',\n            total_amount: '15 500€',\n            law_firm: 'Linklaters',\n        },\n    ];\n    const emptyRecord = {\n        year: '',\n        cost_center: '',\n        total_amount: '',\n        law_firm: '',\n    };\n\n    const [proposals, setFee] = useState<IFee[]>(data);\n    const [proposalsCopy, setFeeCopy] = useState<IFee[]>(data);\n    const [proposalRecord, setFeeRecord] = useState<IFee>({...emptyRecord});\n\n    const inputHandler = (ev: FormEvent<HTMLInputElement>) => {\n        const target = ev.target as HTMLInputElement;\n\n        setFeeRecord({\n            ...proposalRecord,\n            [target.name]: target.value\n        });\n    };\n\n    const submitHandler = () => {\n        setFee([\n            ...proposals,\n            proposalRecord\n        ]);\n        setFeeRecord({...emptyRecord});\n    };\n\n    useCustomEventListener(EditMode.EnteredEditMode, () => {\n        setFeeCopy([...proposals]);\n    });\n\n    useCustomEventListener(EditMode.Saved, () => {\n    });\n\n    useCustomEventListener(EditMode.Discarded, () => {\n        setFee([...proposalsCopy]);\n    });\n\n    return (\n        <Wrapper>\n            <h2>Amount of Fees</h2>\n            <Table>\n                <>\n                    <tr className=\"header\">\n                        <th>Year</th>\n                        <th>Cost center</th>\n                        <th>Total amount</th>\n                        <th>Law firm</th>\n                    </tr>\n                </>\n                <tbody>\n                    {proposals.map(proposal => {\n                        return (\n                            <tr>\n                                <td>{proposal.year}</td>\n                                <td>{proposal.cost_center}</td>\n                                <td>{proposal.total_amount}</td>\n                                <td>{proposal.law_firm}</td>\n                            </tr>\n                        );\n                    })}\n\n                    {props.editMode &&\n                        (\n                            <>\n                                <tr>\n                                    <td><Input name='name' value={proposalRecord.year} onInput={inputHandler} /></td>\n                                    <td><Input name='entity' value={proposalRecord.cost_center} onInput={inputHandler} /></td>\n                                    <td><Input name='location' value={proposalRecord.total_amount} onInput={inputHandler} /></td>\n                                    <td><Input name='expertise' value={proposalRecord.law_firm} onInput={inputHandler} /></td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={6}>\n                                        <button onClick={submitHandler}>+ Add</button>\n                                    </td>\n                                </tr>\n                            </>\n                        )\n                    }\n                </tbody>\n            </Table>\n        </Wrapper>\n    );\n}\n\nexport default ProfileAmountOfFees;\n\n\n","import {FC, FormEvent, useState} from \"react\";\nimport styled from \"styled-components\";\nimport defaultSections, {ICell, ISection} from \"../../../../data/ProfileAdditionalInfoData\";\nimport {Pencil} from \"react-bootstrap-icons\";\nimport { Colors } from \"../../../../styledHelpers/Colors\";\nimport { FontSize } from \"../../../../styledHelpers/FontSize\";\n\nconst Wrapper = styled.div`\n  padding: 10px;\n  .buttons{\n      display:flex;\n      justify-content: flex-end;\n      margin-bottom: 10px;\n      button{\n        margin-right: 5px;\n        border:none;\n        background-color: ${Colors.white};\n    }\n  }\n`;\n\nconst InnerWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst InnerWrapperTitle = styled.div`\n  color: ${Colors.gray};\n  margin-bottom: 5px;\n  font-size: ${FontSize[20]};\n`;\n\nconst InnerWrapperBody = styled.div`\n  display: flex;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  gap: 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  margin-right: 5px;\n  flex-wrap: nowrap;\n  background: ${Colors.cyan};\n  color: ${Colors.darkcyan};\n  button{\n      border:none;\n      background-color: ${Colors.cyan};\n  }\n`;\n\nconst AddButton = styled.button`\n  background: ${Colors.cyan};\n  color: ${Colors.darkcyan};\n  border-radius: 8px;\n  margin-right: 5px;\n  border:none;\n`;\n\nconst Input = styled.input`\n  border: 1px solid ${Colors.black};\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n\nconst ProfileAdditionalInfo: FC = () => {\n    const [sectionsCopy, setSectionsCopy] = useState<ISection[]>([...defaultSections]);\n    const [sections, setSections] = useState<ISection[]>([...defaultSections]);\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [addMode, setAddMode] = useState<string|boolean>(false);\n\n    const editModeHandler = () => {\n        const entersEditMode = !editMode;\n\n        if (entersEditMode) {\n            setSectionsCopy([...sections]);\n        } else {\n            setAddMode(false);\n        }\n\n        setEditMode(!editMode);\n    }\n\n    const saveHandler = () => {\n        setEditMode(false);\n        setAddMode(false);\n    };\n\n    const discardHandler = () => {\n        setSections([...sectionsCopy]);\n        setEditMode(false);\n        setAddMode(false);\n    };\n\n    const addHandler = (sectionName: string) => {\n        if (addMode == sectionName) {\n            const input = document.querySelector(`input[name=${sectionName}]`) as HTMLInputElement;\n\n            if (!input.value) return;\n\n            const newCell: ICell = {\n                name: input.value\n            };\n\n\n            setSections([...sections.map(section => {\n                if (section.name != sectionName) {\n                    return section;\n                }\n\n                return {\n                    name: section.name,\n                    cells: [...section.cells, newCell]\n                };\n            })]);\n\n            setAddMode(false);\n            return;\n        }\n        setAddMode(sectionName);\n    }\n\n    const deleteHandler = (e: FormEvent<HTMLButtonElement>, sectionName: string, cellName: string) => {\n        setSections([...sections.map(section => {\n            if (section.name != sectionName) {\n                return section;\n            }\n\n            return {\n                name: section.name,\n                cells: section.cells.filter(cell => {\n                    return cell.name != cellName;\n                })\n            };\n        })]);\n    };\n\n\n    return (\n        <Wrapper>\n            <div className=\"buttons\">\n                {editMode ?\n                    (\n                        <>\n                            <button onClick={discardHandler}>Discard</button>\n                            <button onClick={saveHandler}>Save</button>\n                            \n                        </>\n                    ) :\n                    (\n                        <>\n                            <button onClick={editModeHandler}>\n                                <Pencil />\n                            </button>\n                        </>\n                    )\n                }\n            </div>\n            {sections.map(section => (\n                <InnerWrapper>\n                    <InnerWrapperTitle>{section.name}</InnerWrapperTitle>\n                    <InnerWrapperBody>\n                        {section.cells.map(cell => (\n                            <Cell>\n                                {cell.name}\n                                {editMode &&\n                                    (<button onClick={(e) => deleteHandler(e, section.name, cell.name)}>X</button>)\n                                }\n                            </Cell>\n                        ))}\n                        {editMode &&\n                            (\n                                <>\n                                    {addMode == section.name &&\n                                        (<Input name={section.name} />)\n                                    }\n                                    <AddButton onClick={() => addHandler(section.name)}>+</AddButton>\n                                </>\n                            )\n                        }\n                    </InnerWrapperBody>\n                </InnerWrapper>\n            ))}\n        </Wrapper>\n    );\n}\n\nexport default ProfileAdditionalInfo;\n","import {FC, useEffect,useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getUsers} from \"../../../actions/usersActions\";\r\nimport ProfileHeader from \"./ProfileHeader/ProfileHeader\";\r\nimport ProfileInformations from \"./ProfilePanelInformations/ProfileInformations\";\r\nimport ProfileProposals from \"./ProfileProposals/ProfileProposals\";\r\nimport ProfileInternalReviews from \"./ProfileInternalReviews/ProfileInternalReviews\";\r\nimport ProfileAmountOfFees from \"./ProfileAmountOfFees/ProfileAmountOfFees\";\r\nimport ProfileAdditionalInfo from \"./ProfileHeader/ProfileAdditionalInfo\";\r\nimport { Colors } from \"../../../styledHelpers/Colors\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: ${Colors.white};\r\n    border-radius: 20px;\r\n`; \r\n\r\nconst Profilepage: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    type GetUsers = ReturnType<typeof getUsers>;\r\n\r\n    useEffect(() => {\r\n        dispatch<GetUsers>(getUsers());\r\n    });\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ProfileHeader editMode={editMode} setEditMode={setEditMode}/>\r\n            <ProfileAdditionalInfo/>\r\n            <ProfileInformations editMode={editMode}/>\r\n            <ProfileProposals editMode={editMode}/>\r\n            <ProfileInternalReviews editMode={editMode}/>\r\n            <ProfileAmountOfFees editMode={editMode}/>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Profilepage;\r\n","import {FC} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Colors} from \"../../styledHelpers/Colors\";\r\nimport { FontSize } from '../../styledHelpers/FontSize';\r\nimport SliderDiv from './WorkspacesSlider/Slider';\r\nimport LatestPublications  from './LatestPublications/LatestPublications';\r\nimport BottomContainer from './ResumeYourWork/BottomContainer';\r\nimport Workspaces from './Workspaces/Workspaces';\r\nimport Entities from './Entities/Entities';\r\nimport Profile from './Profile/Profile';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 70%;\r\n    height: 1000px;\r\n    margin-left: 60px;\r\n    margin-right: 80px;\r\n    margin-top: 20px;\r\n    font-family: Tahoma;\r\n    span{\r\n        font-weight: 500;\r\n        font-size: ${FontSize[24]};\r\n        margin-left:15px;\r\n    }\r\n`;\r\n\r\nconst Center: FC = () => {\r\n    return ( \r\n        <Wrapper>\r\n            <Router>\r\n                 <Switch>\r\n\r\n                    <Route exact path=\"/\">\r\n                        <LatestPublications/>\r\n                        <span>Workspaces</span>\r\n                        <SliderDiv/>\r\n                        <span>Resume your work</span>\r\n                        <BottomContainer/>\r\n                    </Route>\r\n                   \r\n                    <Route path=\"/workspace\">\r\n                        <Workspaces/>\r\n                    </Route>\r\n\r\n                     <Route path=\"/profile\">\r\n                        <Profile/>\r\n                    </Route>\r\n                    \r\n                    <Route path=\"/entities\">\r\n                        <Entities/>\r\n                    </Route>\r\n\r\n\r\n                    <Route path=\"/publication\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/people\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/administration\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/client_contract\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/supplier_contract\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/corporate\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/group_norms\">\r\n                        404\r\n                    </Route>\r\n                    <Route path=\"/real_estate_contracts\">\r\n                        404\r\n                    </Route>\r\n                </Switch>    \r\n            </Router>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Center;","import {FC, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport TopBar from '../components/TopBar/TopBar';\r\nimport LeftMenu from \"../components/LeftSidebar/LeftSidebar\";\r\nimport Center from '../components/Center/Center';\r\nimport {Colors} from \"../styledHelpers/Colors\";\r\nimport { getUsers } from '../actions/usersActions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getLatestPublications } from \"../actions/publicationsActions\";\r\nimport { getWorks } from \"../actions/worksActions\";\r\n\r\nconst Wrapper = styled.section`\r\n    background-color: ${Colors.lightBlue};\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    max-width: 100%;\r\n    min-height:1800px;\r\n    height: fit-content;\r\n    justify-content:center;\r\n`;\r\n\r\nconst MainPage: FC = () => {\r\n    const dispatch = useDispatch();\r\n    type GetUsers = ReturnType<typeof getUsers>;\r\n    type GetLatestPublications = ReturnType<typeof getLatestPublications>;\r\n    type GetWorks = ReturnType<typeof getWorks>;\r\n\r\n    useEffect(() => {\r\n        dispatch<GetUsers>(getUsers());\r\n        dispatch<GetLatestPublications>(getLatestPublications());\r\n        dispatch<GetWorks>(getWorks());\r\n    });\r\n    \r\n    return ( \r\n        <Wrapper>\r\n            <TopBar/>\r\n            <Content>\r\n                <LeftMenu/>\r\n                <Center/>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n\r\n","import _ from \"lodash\";\nimport * as actionTypes from \"./publicationTypes\";\nimport {IPublication} from \"../entities/publication\";\nimport {Dispatch} from \"redux\";\nimport {getPhoto} from \"./photoActions\";\nimport {getUser} from \"./usersActions\";\n\nexport const getLatestPublications = (): Promise<IPublication[]> => ((dispatch: Dispatch) => {\n    return fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(response => response.json() as Promise<IPublication[]>)\n        .then(async (publications: IPublication[]) => {\n            const latestPublications = _.takeRight<IPublication>(publications, 4);\n            for (const publication of latestPublications) {\n                const creationDate = '5 days ago';\n                const photo = await getPhoto(publication.id);\n                const userPhoto = await getPhoto(publication.userId);\n                const user = await getUser(publication.userId);\n                publication.thumbnailUrl = photo.thumbnailUrl;\n                publication.creationDate = creationDate;\n                publication.author = user;\n\n                user.photo = {\n                    fullUrl: userPhoto.url,\n                    thumbnailUrl: userPhoto.thumbnailUrl\n                };\n            }\n\n            dispatch({\n                type: actionTypes.GET_LATEST_PUBLICATIONS,\n                latestPublications\n            });\n        });\n}) as any;","import {IWork} from \"../entities/work\";\nimport {Dispatch} from \"redux\";\nimport * as actionTypes from './workTypes';\nimport store from \"../tools/store\";\n\nexport const getWorks = (): Promise<IWork[]> => ((dispatch: Dispatch) => {\n    return fetch('https://jsonplaceholder.typicode.com/comments')\n        .then(response => response.json())\n        .then(async (works: IWork[]) => {\n            for (const work of works) {\n                const userId = Math.floor(Math.random() * 10) + 1;\n                const users = store.getState().users.usersList;\n                const followed = userId % 2 == 0;\n\n                work.author = users[userId];\n                work.followed = followed;\n            }\n\n            dispatch({\n                type: actionTypes.GET_YOUR_WORKS,\n                works\n            })\n        });\n}) as any;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport MainPage from './Home/Homepage';\nimport store from './tools/store';\nimport {Provider} from 'react-redux';\nimport { Reset } from 'styled-reset';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Reset />\n      <App/>\n      <MainPage />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}